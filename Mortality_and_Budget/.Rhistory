tmp[1,]
y <- order(tmp[1,])
y
tmp[1,]
y <- order(tmp[1,], )
y <- matrix[order(tmp[1,], )]
y <- matrix[order(tmp[1,]),]
y <- tmp[order(tmp[1,]),]
y
tmp = tmp[-c(21), c(-21)]
tmp
tmp = tmp[-c(21), c(-21)] # -c(row), c(-col)
tmp
tmp1 <- reshape(tmp, 40, 10)
tmp1 <- dim(tmp) = c(40, 10)
tmp = tmp[1:20, 1:20] # -c(row), c(-col)
tmp
tmp = tmp[1:20, 1:20] # can't delete but can exclude
tmp
tmp <- c(40,10)
tmp
tmp
set.seed(37) # set seed to 37 to generate same rnumbers
set.seed(37) # set seed to 37 to generate same rnumbers
set.seed(37) # set seed to 37 to generate same rnumbers
x <- rnorm(441, mean=0, sd=1) # data for matrix tmp
tmp = matrix(data=x, nrow=21, ncol=21, byrow=TRUE) # define tmp matrix
tmp
diag(tmp) <- 1 # change the diagonal elements to 1
diag(tmp)
tmp
kappa(tmp, exact=TRUE) # the cond. number of tpm
solve(tmp) # the inverse of tmp
sum(diag(tmp), n.arm=FALSE) # diag() returns the main diagonal elements
y <- tmp[order(tmp[1,]),] # sorted tmp by row
tmp = tmp[1:20, 1:20] # can't delete but can exclude
tmp
dim(tmp) <- c(40,10)
tmp
tmp1 = (dim(tmp) <- c(40,10))
tmp1
tmp1 <- tmp
tmp1
tmp1 = dim(tmp) <- c(40,10)
tmp1
tmp
tmp1 <- tmp
tmp1
tmp2 <- rep(tmp1, times=4)
tmp
dim(tmp) <- c(40,10)
tmp
tmp1 <- tmp
tmp1
tmp2 <- rep(tmp1, times=4)
tmp2
tmp2 <- rep(tmp1, times=4)
tmp2
array(data=tmp2, dim=length(tmp2), dimnames= NULL)
tmp2 <- array(data=rep(tmp1, times=4), dim=length(rep(tmp1, times=4)),
dimnames= NULL)
tmp2
rcond(tmp2)
tmp2 <- matrix(data=rep(tmp1, times=4), nrow=40, ncol=40,
byrow=TRUE,
dimnames= NULL)
tmp2
rcond(tmp2)
solve(tmp2)
log(tmp2)
NaN
log(tmp2, base=exp(2))
tmp2 <- array(data=rep(tmp1, times=4), dim=length(rep(tmp1, times=4)),
dimnames= NULL)
tmp2
rcond(tmp2)
rcond(tmp2) # get false for 'is.matrix(x)
is.matrix(tmp)
rcond(tmp2) # get false for 'is.matrix(x)
rcond(tmp2)
set.seed(37) # set seed to 37 to generate same rnumbers
x <- rnorm(441, mean=0, sd=1) # data for matrix tmp
tmp = matrix(data=x, nrow=21, ncol=21, byrow=TRUE) # define tmp matrix
tmp
diag(tmp) <- 1 # change the diagonal elements to 1
diag(tmp)
tmp
kappa(tmp, exact=TRUE) # the cond. number of tpm
solve(tmp) # the inverse of tmp
sum(diag(tmp), n.arm=FALSE) # diag() returns the main diagonal elements
y <- tmp[order(tmp[1,]),] # sorted tmp by row
tmp = tmp[1:20, 1:20] # can't delete but can exclude
dim(tmp) <- c(40,10)
tmp
tmp1 <- tmp
tmp1
tmp2 <- matrix(data=rep(tmp1, times=4), nrow=40, ncol=40,
byrow=TRUE,
dimnames= NULL)
tmp2
rcond(tmp2)
solve(tmp)
solve(tmp)
tmp2 <- matrix(data=rep(tmp1, times=4), nrow=40, ncol=40,
byrow=TRUE,
dimnames= NULL)
tmp2
rcond(tmp2)
solve(tmp2)
solve(tmp2)
tmp[<=0] <- 0.5
tmp2[tmp2 <= 0] <- 0.5
tmp2
solve(tmp2)
solve(tmp2) # error
tmp2[tmp2 <= 0] <- 0.5
tmp2
tmp2[1,1]
tmp2[1,]
data1 = data.frame(ID = 1:5, x = letters [1:5])
data2 = data.frame(ID = 1:5, y = letters [6:10])
data3 = merge(data1, data2)
view(data3)
data3
merge(data1, data2)
data2 = data.frame(ID = 4:8, y = letters [6:10])
merge(data1, data2)
merge(data1, data2, all = TRUE)
merge(data1, data2, all.x = TRUE)
merge(data1, data2, all.x = TRUE, all.y = TRUE)
merge(data1, data2, all.y = TRUE)
data2 = data.frame(ID = 4:8, x = letters [6:10])
merge(data1, data2, all.y = TRUE)
merge(data1, data2, all = TRUE)
merge(data1, data2, by = 'ID')
merge(data1, data2, by = 'ID', all = TRUE)
merge(data1, data2, by = 'ID', all = TRUE, suffixes = c(1,2))
data3 = merge(data1, data2, by = 'ID', all = TRUE, suffixes = c(1,2))
data4 = data.frame(ID = 3:9, z = letters [3:9])
merge(data3, data4, by = 'ID', all =TRUE)
data2 = data.frame(ID2 = 1:5, x = letters [6:10])
data1 = data.frame(ID = 1:5, x = letters [1:5])
data2 = data.frame(ID2 = 1:5, x = letters [6:10])
data3 = merge(data1, data2, by.x = 'ID1', by.y = 'ID2')
data3 = merge(data1, data2, by.x = c('ID1'), by.y = c('ID2'))
data3 = merge(data1, data2, by.x = "ID1", by.y = "ID2")
merge(data1, data2, by.x = "ID1", by.y = "ID2")
merge(data1, data2, by.x = "ID1", by.y = "ID2")
data1 = data.frame(ID1 = 1:5, x = letters [1:5])
data2 = data.frame(ID2 = 1:5, x = letters [6:10])
merge(data1, data2, by.x = "ID1", by.y = "ID2")
wide = data.frame(ID = 1:5, x = c(10, 20, 30, 40, 50),
t.1 = letters[1:5], t.2 = letters[6:10])
wide
wide = data.frame(ID = 1:5, x = c(10, 20, 30, 40, 50),
t.1 = letters[1:5], t.2 = letters[21:26])
wide
wide = data.frame(ID = 1:5, x = c(10, 20, 30, 40, 50),
t.1 = letters[1:5], t.2 = letters[22:26])
wide
reshape(wide, varying = c('t.1', 't.2'), direction = 'long')
mortality_data <- read.csv("C:/Users/Loube/Desktop/Education/OneDrive - CUNY/QC/Spring20/ECON382/Assignments/R_proj_15MAY/PROJECT/mortality_data.csv")
View(mortality_data)
mort_data <- read.csv("mortality_data", header = TRUE, sep = ",")
mort_data <- read.table("mortality_data", header = TRUE, sep = ",")
mort_data <- read.table("mortality_data.csv", header = TRUE, sep = ",")
setwd("C:/Users/Loube/Desktop/Education/OneDrive - CUNY/QC/Spring20/ECON382/Assignments/R_proj_15MAY")
getwd()
View(mortality_data)
View(mortality_data)
read.csv("mortality_data.csv", header = TRUE, sep = ",")
mortality_data
read.table("mortality_data.csv")
q()
### Econ382, Final Project, Loubens Louis ###
install.packages("readr")
install.packages("stringr")
mort_data = mortality_data[(mortality_data$year >= 1993
& mortality_data$year <= 2015),]
colnames(mort_data)[4:11] = c("mort_data", "prob_death", "ave_length_surv", "num_of_surv", "num_of_deaths", "num_years_lived", "num_years_left", "life_expec") # colnames() to rename columns
mort_data # check if object is generated successfully
stringr::str_locate(mort_data, "-")
mortality_data <- read.csv("~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/mortality_data.csv")
View(mortality_data)
mort_data = mortality_data[(mortality_data$year >= 1993
& mortality_data$year <= 2015),]
colnames(mort_data)[4:11] = c("mort_data", "prob_death", "ave_length_surv", "num_of_surv", "num_of_deaths", "num_years_lived", "num_years_left", "life_expec") # colnames() to rename columns
mort_data # check if object is generated successfully
stringr::str_locate(mort_data$age, "-")[1,]
stringr::str_locate(mort_data$age, "-")[1,]
stringr::str_locate(mort_data$age, "-")[,1]
mort_data$age
library(readr)
library(stringr)
require(stringi)
installed.packages()
library
library(lib.loc = .Library)
?stringi
stringi-search(mort_data$age, "-")[, 1]
stringi::search(mort_data$age, "-")[, 1]
stringi::stri_detect_charclass(mort_data$age, "-")[, 1]
str_locate(mort_data$age, "-")[,1]
str_length(mort_data$age)
str_length(str_locate(mort_data$age, "-")[,1])
str_sub(str_length(str_locate(mort_data$age, "-")[,1]))
mort_data$age
str_locate(mort_data$age, "-")[,1]
str_locate(mort_data$age, "-",na.rm=T)[,1]
str_locate(mort_data$age, "-")[,1]
str_length(str_locate(mort_data$age)[,1])
str_length(str_locate(mort_data$age, "-")[,1])
str_sub(str_length(str_locate(mort_data$age, "-")[,1]), 1, -1)
str_locate(mort_data$age, "-")[,1]
str_length(mort_data$age, "-")[,1]
str_length(mort_data$age)[,1]
str_length(mort_data$age)
str_locate(mort_data$age, "-")[,1]
mort_data$age
mortality_data <- read.csv("~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/mortality_data.csv")
View(mortality_data)
### Econ382, Final Project, Loubens Louis ###
install.packages("readr")
install.packages("stringr")
library(readr)
library(stringr)
require(stringi)
?stringi
mort_data = mortality_data[(mortality_data$year >= 1993
& mortality_data$year <= 2015),]
colnames(mort_data)[4:11] = c("mort_data", "prob_death", "ave_length_surv", "num_of_surv", "num_of_deaths", "num_years_lived", "num_years_left", "life_expec") # colnames() to rename columns
mort_data # check if object is generated successfully
str_locate(mort_data$age, "-")[,1]
str_length(mort_data$age)
str_sub(str_length(str_locate(mort_data$age, "-")[,1]))
mort_data$age
library(readr)
income_data <- read_csv("Data_sets/income_data.csv")
View(income_data)
inc_data = reshape(income_data, varying = names(income_data)[2:24], timevar = "Year", sep = ".", direction = "long")
View(inc_data)
warnings()
inc_data = inc_data[,-4]
View(inc_data)
inc_data = order(inc_data, ["state", "Year"] )
inc_data = order(inc_data)["state", "Year"]
inc_data = reshape(income_data, varying = names(income_data)[2:24], timevar = "year", sep = ".", direction = "long")
inc_data = order(inc_data$state, inc_data$state)
inc_data = inc_data[order(inc_data$state, inc_data$state)]
inc_data = inc_data[order(inc_data$state, inc_data$state), ]
inc_data = inc_data[order(inc_data$state, inc_data$year), ]
inc_data = inc_data[ , -4]
inc_data = inc_data[order(inc_data$state, inc_data$year), ]
inc_data = inc_data[order(inc_data$state, inc_data$year), ]
mortality_data <- read.csv("~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/mortality_data.csv")
View(mortality_data)
income_data <- read.csv("~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/income_data.csv", header=FALSE)
View(income_data)
### Econ382, Final Project, Loubens Louis ###
install.packages("readr")
install.packages("stringr")
install.packages("readr")
mort_data # check if object is generated successfully
mort_data = mortality_data[(mortality_data$year >= 1993
& mortality_data$year <= 2015),]
colnames(mort_data)[4:11] = c("mort_data", "prob_death", "ave_length_surv", "num_of_surv", "num_of_deaths", "num_years_lived", "num_years_left", "life_expec") # colnames() to rename columns
mort_data # check if object is generated successfully
inc_data = reshape(income_data, varying = names(income_data)[2:24], timevar = "year", sep = ".", direction = "long")
inc_data = reshape(income_data, varying = names(income_data)[2:24], timevar = "year", sep = ".", direction = "long")
View(income_data)
inc_data = reshape(income_data,
varying = names(income_data)[2:24],
timevar = "year",
sep = ".",
direction = "long")
inc_data = inc_data[ , -4]
View(income_data)
View(mort_data)
inc_data = reshape(income_data,
varying = names(income_data)[2:24],
timevar = "year",
sep = ".",
direction = "long")
inc_data = reshape(income_data,
varying = names(income_data)[2:24],
timevar = "year",
sep = ".",
direction = "long")
inc_data = reshape(income_data,
varying = names(income_data)[2:24],
timevar = "Year",
sep = ".",
direction = "long")
inc_data = reshape(income_data,
varying = names(income_data)[2:24],
timevar = "year",
sep = ".",
direction = "long")
inc_data <- reshape(income_data,
varying = names(income_data)[2:24],
timevar = "year",
sep = ".",
direction = "long")
inc_data <- reshape(income_data,
varying = names(income_data)[2:24],
timevar = "year",
sep = ".",
direction = "long")
mort_data # check if object is generated successfully
str_locate(mort_data$age, "-")[,1]
library(stringr)
library(readr)
str_locate(mort_data$age, "-")[,1]
str_length(mort_data$age)
str_sub(str_length(str_locate(mort_data$age, "-")[,1]))
mort_data$age
inc_data = reshape(income_data,
varying = names(income_data)[2:24],
sep = ".",
timevar = "year")
inc_data = reshape(income_data,
varying = names(income_data)[2:24],
sep = ".",
timevar = "year",
direction = "long")
inc_data = reshape(income_data, varying = names(income_data)[2:24], timevar = "Year", sep = ".", direction = "long")
inc_data = reshape(income_data, varying = names(income_data)[2:24], timevar = "Year", sep = ".", direction = "long")
inc_data = reshape(income_data, varying = names(income_data)[2:24], timevar = "Year", sep = ".", direction = "long")
mortality_data <- read.csv("~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/mortality_data.csv")
View(mortality_data)
mort_data = mortality_data[(mortality_data$year >= 1993
& mortality_data$year <= 2015),]
colnames(mort_data)[4:11] = c("mort_data", "prob_death", "ave_length_surv", "num_of_surv", "num_of_deaths", "num_years_lived", "num_years_left", "life_expec") # colnames() to rename columns
mort_data # check if object is generated successfully
mort_data$age
income_data <- read.csv("~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/income_data.csv", header=FALSE, row.names=1)
View(income_data)
inc_data = reshape(income_data, varying = names(income_data)[2:24], timevar = "Year", sep = ".", direction = "long")
library(readr)
dataset <- read_csv(NULL)
View(dataset)
income_data <- read.csv("~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/income_data.csv")
View(income_data)
inc_data = reshape(income_data, varying = names(income_data)[2:24], timevar = "Year", sep = ".", direction = "long")
View(inc_data)
inc_data = inc_data[ , -4]
View(inc_data)
inc_data = reshape(income_data, varying = names(income_data)[2:24], timevar = "year", sep = ".", direction = "long")
View(inc_data)
inc_data = inc_data[order(inc_data$state, inc_data$Year)]
inc_data = inc_data[order(inc_data$state, inc_data$Year), ]
inc_data = inc_data[order(inc_data$state, inc_data$year), ]
View(inc_data)
inc_data
inc_data = inc_data[ , -4]
inc_data
install.packages("stringr")
install.packages("readr")
mortality_data <- read.csv("~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/mortality_data.csv")
View(mortality_data)
mort_data = mortality_data[(mortality_data$year >= 1993
& mortality_data$year <= 2015),]
colnames(mort_data)[4:11] = c("mort_data", "prob_death", "ave_length_surv", "num_of_surv", "num_of_deaths", "num_years_lived", "num_years_left", "life_expec") # colnames() to rename columns
mort_data # check if object is generated successfully
inc_data = reshape(income_data, varying = names(income_data)[2:24], timevar = "year", sep = ".", direction = "long")
inc_data = inc_data[order(inc_data$state, inc_data$year), ]
inc_data = inc_data[ , -4]
unique(mort_data$year)
unique(mort_data$life_expec)
colnames(mort_data$[4:11])
colnames(mort_data[4:11])
library(readr)
mortality_data <- read_csv("Data_sets/mortality_data.csv")
View(mortality_data)
library(readr)
income_data <- read_csv("Data_sets/income_data.csv")
View(income_data)
mort_data = mortality_data[(mortality_data$year >= 1993
& mortality_data$year <= 2015),]
colnames(mort_data)[4:11] = c("mort_data", "prob_death", "ave_length_surv", "num_of_surv", "num_of_deaths", "num_years_lived", "num_years_left", "life_expec") # colnames() to rename columns
mort_data # check if object is generated successfully
inc_data = reshape(income_data, varying = names(income_data)[2:24], timevar = "year", sep = ".", direction = "long")
inc_data = inc_data[order(inc_data$state, inc_data$year), ]
inc_data = inc_data[ , -4]
unique(mort_data$life_expec)
colnames(mort_data[4:11])
inc_data
View(inc_data)
install.packages(c("backports", "BH", "broom", "callr", "cli", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "fansi", "forcats", "fs", "ggplot2", "glue", "haven", "hms", "htmltools", "jsonlite", "knitr", "lifecycle", "lubridate", "matrixStats", "mime", "mnormt", "modelr", "modeltools", "multcomp", "mvtnorm", "openxlsx", "party", "pillar", "plyr", "prettyunits", "processx", "ps", "psych", "purrr", "R6", "Rcpp", "remotes", "reshape2", "rlang", "rmarkdown", "rstudioapi", "rvest", "scales", "selectr", "stringi", "strucchange", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "vctrs", "withr", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("boot", "class", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "survival"), lib="C:/Program Files/R/R-3.6.1/library")
mort_data4$tmp = stringr::str_locate(mortality_data$age, "-")[ , 1]
mortality_data$tmp = stringr::str_locate(mortality_data$age, "-")[ , 1]
View(mortality_data)
mortality_data$tmp = stringr::str_locate(mortality_data$age, "a")[ , 0]
View(mortality_data)
mortality_data$tmp = stringr::str_locate(mortality_data$age, "-")[ , 1]
View(mortality_data)
fruit <- c("fig", "bannann")
stringr::str_locate(fruit, "g")
stringr::str_locate(fruit, "g")[,2]
mortality_data$age2 <- stringr::str_sub(mortality_data$age, 1,
mortality_data$tmp-1)
View(mortality_data)
str(mortality_data$age2)
mortality_data$age2 = as.numeric(mortality_data$age2)
str(mortality_data$age2)
cut(mortality_data$age,
breaks = c(0, 18, 64, 110),
labels = c("<18", "18-64", ">64"),
include.lowest = TRUE)
cut(mortality_data$age2,
breaks = c(0, 18, 64, 110),
labels = c("<18", "18-64", ">64"),
include.lowest = TRUE)
mortality_data$age_group <- cut(mortality_data$age2,
breaks = c(0, 18, 64, 110),
labels = c("<18", "18-64", ">64"),
include.lowest = TRUE)
View(mortality_data)
mortality_data$age2 = "0"
View(mortality_data)
library(readr)
mortality_data <- read_csv("Data_sets/mortality_data.csv")
View(mortality_data)
library(readr)
income_data <- read_csv("Data_sets/income_data.csv")
View(income_data)
mort_data = mortality_data[(mortality_data$year >= 1993
&
mortality_data$year <= 2015),]
colnames(mort_data)[4:11] = c("mort_data", "prob_death", "ave_length_surv", "num_of_surv", "num_of_deaths", "num_years_lived", "num_years_left", "life_expec") # colnames(file)[index] to rename columns
mort_data # check if object is generated successfully
mortality_data$tmp = stringr::str_locate(mortality_data$age, "-")[ , 1]
mortality_data$age2 <- stringr::str_sub(mortality_data$age, 1,
mortality_data$tmp-1)
mortality_data$age2 = as.numeric(mortality_data$age2)
mortality_data$age_group <- cut(mortality_data$age2,
breaks = c(0, 18, 64, 110),
labels = c("<18", "18-64", ">64"),
include.lowest = TRUE)
inc_data = reshape(income_data,
varying = names(income_data)[2:24],
timevar = "year",
sep = ".",
direction = "long")
inc_data = inc_data[order(inc_data$state, inc_data$year), ]
inc_data = inc_data[ , -4]
inc_data = reshape(income_data,
varying = names(income_data)[2:24],
timevar = "year",
sep = ".",
direction = "long")
View(income_data)
library(readr)
income_data <- read_csv("Data_sets/income_data.csv")
View(income_data)
inc_data = reshape(income_data,
varying = names(income_data)[2:24],
timevar = "year",
sep = ".",
direction = "long")
income_data <- read.csv("~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/income_data.csv", header=FALSE)
View(income_data)
inc_data = reshape(income_data,
varying = names(income_data)[2:24],
timevar = "year",
sep = ".",
direction = "long")
income_data <- read.csv("~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/income_data.csv", header=FALSE)
View(income_data)
inc_data = reshape(income_data,
varying = names(income_data)[2:24],
timevar = "year",
sep = ".",
direction = "long")
library(readr)
income_data <- read_csv("Data_sets/income_data.csv")
View(income_data)
inc_data = reshape(income_data,
varying = names(income_data)[2:24],
timevar = "year",
sep = ".",
direction = "long")
View(income_data)
mortality_data$age2[mortality_data$age == "0"] = "0"
View(mortality_data)
mort_data = mortality_data[(mortality_data$year >= 1993
&
mortality_data$year <= 2015),]
colnames(mort_data)[4:11] = c("mort_data", "prob_death", "ave_length_surv", "num_of_surv", "num_of_deaths", "num_years_lived", "num_years_left", "life_expec") # colnames(file)[index] to rename columns
mort_data # check if object is generated successfully
mortality_data$tmp = stringr::str_locate(mortality_data$age, "-")[ , 1]
mortality_data$age2 <- stringr::str_sub(mortality_data$age, 1,
mortality_data$tmp-1)
mortality_data$age2 = as.numeric(mortality_data$age2)
mortality_data$age_group <- cut(mortality_data$age2,
breaks = c(0, 18, 64, 110),
labels = c("<18", "18-64", ">64"),
include.lowest = TRUE)
mortality_data$age2[mortality_data$age == "0"] = "0"
mortality_data$age2[mortality_data$age == "110+"] = "110"
mortality_data$age2 = as.numeric(mortality_data$age2)
str(age2)
str(mortality_data$age2)
mortality_data$age_group <- cut(mortality_data$age2,
breaks = c(0, 18, 64, 110),
labels = c("<18", "18-64", ">64"),
include.lowest = TRUE)
mort_data$tmp = stringr::str_locate(mortality_data$age, "-")[ , 1]
mortality_data$tmp = stringr::str_locate(mortality_data$age, "-")[ , 1]
mortality_data = mortality_data[ , -c(3, 12, 13)]
mortality_data = mortality_data[ , c(1, 2, 11, 3:10)]
