str(data)
install.packages("stargazer")
library(stargazer)
## Statistical exploration ##
stargazer(data, title = "Statistical Summary",
type = "text")
ols1 <-lm(wage~female+nonwhite+unionmember+education+experience)
ols2 <-lm(wage~female+nonwhite+unionmember+education+experience+I(experience^2))
stargazer(ols1, ols2, title = "OLS Results", type = "text") # observe results jointly
install.packages("stargazer")
## Statistical exploration ##
stargazer(data, title = "Statistical Summary",
type = "text")
library(stargazer)
## Statistical exploration ##
stargazer(data, title = "Statistical Summary",
type = "text")
ols1 <-lm(wage~female+nonwhite+unionmember+education+experience)
load('wage1000.rda')
attach(data)
## Statistical exploration ##
stargazer(data, title = "Statistical Summary",
type = "text")
ols1 <-lm(wage~female+nonwhite+unionmember+education+experience)
ols2 <-lm(wage~female+nonwhite+unionmember+education+experience+I(experience^2))
stargazer(ols1, ols2, title = "OLS Results", type = "text") # observe results jointly
## Statistical exploration ##
stargazer(data, title = "Statistical Summary",
type = "text")
## Statistical exploration ##
stargazer(data, title = "Statistical Summary",
type = "html", out = "Descriptives.doc")
stargazer(data, title = "Statistical Summary",
type = "text")
stargazer(ols1, ols2, title = "OLS Results", type = "html", out = "OLS_Results.doc") # observe results jointly
stargazer(ols1, ols2, title = "OLS Results", type = "text")  # observe results jointly
cor(data[, 5:7])
cor(data[, 5:7]) # correlation between age, experience and education
names(data)
cor(data[, 1:3])
names(ols1)
names(ols2)
ols1$model
plot(data$wage~experience)
plot(log(data$wage~experience))
plot(log2(data$wage~experience))
plot(data$wage~experience)
plot(data$wage~experience, col="red")
plot(data$wage~experience, col="rose")
plot(data$wage~experience, col="pink")
plot(data$wage~experience, col="gold")
plot(data$wage~experience, unionmember, col="gold")
plot(data$wage~experience, unionmember, col="gold")
plot(data$wage~experience, age, col="gold")
plot(data$wage~experience, col="gold")
coef(ols1)
View(ols1)
View(data)
caschool <- read.csv("C:/Users/Loube/Desktop/Education/OneDrive - CUNY/QC/Spring20/ECON382/R Programming/caschool.csv")
View(caschool)
caschool
output <- lm(testscr ~ str+el_pct, ddata = caschool)
output <- lm(testscr ~ str + el_pct, data = caschool)
coef(output, vcov = vcovHC(output, type = "HC1"))
coef(output)
View(ols1)
?UCBAdmissions
UCBAdmissions
UCBAdmissions$department
UCBAdmissions$gender
str(UCBAdmissions)
UCBAdmissions = UCBAdmissions[ , ]
UCBAdmissions = UCBAdmissions$Admit
str(UCBAdmissions)
plot(UCBAdmissions)
margin.table(UCBAdmissions, 2)
margin.table(UCBAdmissions, 3)
margin.table(UCBAdmissions, 1:3)
margin.table(UCBAdmissions, 1)
margin.table(UCBAdmissions, 2)
margin.table(UCBAdmissions, 3)
margin.table(UCBAdmissions)
?margin.table
admit_dept <- margin.table(UCBAdmissions, 1)
admit_dept <- margin.table(UCBAdmissions, 3)
admit_dept
barplot(admit_dept)
admit_gendr <- margin.table(UCBAdmissions, 2)
barplot(admit_dept, admit_gendr)
barplot(admit_dept$admit_gendr)
barplot(admit_dept ~ admit_gendr)
barplot(admit_dept, admit_gendr)
barplot(admit_dept)
barplot(admit_gendr)
admit_dept
admit.dept <- margin.table(UCBAdmissions, 3)# new table for admit data
admit_dept
prop.table(admit.dept)
round(prop.table(admit.dept))
round(prop.table(admit.dept), 2)
barplot(round(prop.table(admit.dept), 2))
admit1 <- as.data.frame(UCBAdmissions)
View(admit1)
admit1 <- as.data.frame(UCBAdmissions)
admit1
colnames(UCBAdmissions[4]) = "Qty"
colnames(UCBAdmissions[,4]) = "Qty"
colnames(UCBAdmissions[1,4]) = "Qty"
colnames(UCBAdmissions[1,4])
colnames(UCBAdmissions)
View(admit1)
names(UCBAdmissions)
admit1
admit2 <- lapply(admit1, function(x)rep(x, admit1$freq))
admit2 <- lapply(admit1, function(x)rep(x, admit1$freq))
barplot(round(prop.table(admit.dept), 2)*100)
round(prop.table(admit.dept), 2)*100
admit2 <- lapply(admit1, function(x)rep(x, admit1$Freq))
admit3 <- as.data.frame(admit2)
admit3
admit3[ , -4]
admit3
admit3 = admit3[ , -4]
admit3
View(admit3)
admit3$Gender
admit3$Gender, admit3$Admit
admit3$Admit
admit.rows <- as.data.frame(lapply(as.data.frame(UCBAdmissions), function(x)rep(x, as.data.frame(UCBAdmissions)$Freq)))[ , -4]
str(admit.rows)
admit.rows
head(admit.rows)
admit.rows[1:20]
admit.rows[1:20, ]
admit.rows[,1 ]
admit.rows[,2]
admit.rows[,3]
rm(list = ls())
x1 <- c(rep(1:10))
x1
x1 <- c(rep(10:1))
x1
x1 <- c(rep(10:1, 2))
x1
x1 <- c(rep(10:1))
x1
barplot(x1>4, col = "green")
barplot(x1>5, col = "green")
barplot(x1==5, col = "green")
barplot(x1, x1==5, col = "green")
barplot(x1, x1==5, col = "red")
barplot(x1==5, col = "red")
barplot(x1, col = "red")
x1 <- c(rep(1:10))
x1
barplot(x1, col = "red")
x1 <- scan()
x1
barplot(x1, col = "red")
barplot(x1, y = c(rep(1:9)), col = "red")
barplot(x1, col = "red")
barplot(x1, col = "purple")
barplot(x1, col = "gold")
barplot(x1, col = "tomato")
barplot(x1, col = "tomato4")
?colors
barplot(x1, col = rgb("red", "green"))
barplot(x1, col = rgb("red", "green", "blue"))
barplot(x1, col = "tomato4")
colors()
barplot(x1, col = "turquoise")
barplot(x1, col = "turquoise3")
barplot(x1, col = "purple1")
barplot(x1, col = "purple4")
1
barplot(x1, col = "purple1")
barplot(x1, col = colors()[122])
colors()
barplot(x1, col = colors()[124]) #deepskyblue1
barplot(x1, col = colors()[121]) #deepskyblue1
barplot(x1, col = colors()[122]) #deepskyblue1
barplot(x1, col = colors()[144]) #deepskyblue1's position alphabetically
col2rgb("gold2")
barplot(x1, col = rgb(.54, .0, .0) #deepskyblue1's position alphabetically
barplot(x1, col = rgb(.54, .0, .0)) #deepskyblue1's position alphabetically
barplot(x1, col = rgb(.54, .0, .0)) #deepskyblue1's position alphabetically
barplot(x1, col = rgb(.54, .0, .0, max = 255)) #deepskyblue1's position alphabetically
barplot(x1, col = c("gold", "black") #deepskyblue1's position alphabetically
barplot(x1, col = c("gold", "black")) #deepskyblue1's position alphabetically
barplot(x1, col = c("gold", "black")) #deepskyblue1's position alphabetically
?palletes
?palette
palette()
barplot(x1, col = rainbow(6) #deepskyblue1's position alphabetically
barplot(x1, col = rainbow(6)) #deepskyblue1's position alphabetically
barplot(x1, col = rainbow(6)) #deepskyblue1's position alphabetically
barplot(x1, col = rainbow(3)) #deepskyblue1's position alphabetically
barplot(x1, col = rainbow(2)) #deepskyblue1's position alphabetically
barplot(x1, col = rainbow(10)) #deepskyblue1's position alphabetically
barplot(x1, col = cm.colors(10)) #deepskyblue1's position alphabetically
barplot(x1, col = "gold2" #deepskyblue1's position alphabetically
barplot(x1, col = "gold2") #deepskyblue1's position alphabetically
barplot(x1, col = "gold2") #deepskyblue1's position alphabetically
require(RColorBrewer)
x1
barplot(x1)
require(RColorBrewer)
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
display.brewer.all()
display.brewer.all(3, "yellow")
display.brewer.all(3, "Yellow")
display.brewer.all(3, "Greens")
display.brewer.all(3, "Accent")
display.brewer.all(3, "Accent")
display.brewer.pal(3, "Accent")
display.brewer.pal(8, "Accent")
greens <- brewer.pal(6, "greens")
greens <- brewer.pal(6, "Greens")
greens
display.brewer.pal(6, "Greens")
display.brewer.pal(6, "Golds")
display.brewer.pal(6, "Gold")
greens
barplot(x1, col = greens)
barplot(x1, col = brewer.pal(6, "Set3"))
barplot(x1, col = brewer.pal(6, "Paired"))
rm(list = ls())
remove.packages("RColorBrewer")
gold <- col = "gold"
##### R Essential
?UCBAdmissions
UCBAdmissions$gender
str(UCBAdmissions)
plot(UCBAdmissions)
margin.table(UCBAdmissions)
?margin.table
admit.dept <- margin.table(UCBAdmissions, 3)# new table for admit data
admit_gendr <- margin.table(UCBAdmissions, 2)
barplot(admit_dept)
barplot(admit_gendr)
admit_dept
prop.table(admit.dept)
barplot(round(prop.table(admit.dept), 2)*100)
round(prop.table(admit.dept), 2)*100
admit1 <- as.data.frame(UCBAdmissions)
admit1
colnames(UCBAdmissions)
names(UCBAdmissions)
admit1
admit2 <- lapply(admit1, function(x)rep(x, admit1$Freq))
admit3 <- as.data.frame(admit2)
admit3
admit3 = admit3[ , -4]
admit3
admit3$Admit
admit.rows <- as.data.frame(lapply(as.data.frame(UCBAdmissions), function(x)rep(x, as.data.frame(UCBAdmissions)$Freq)))[ , -4]
str(admit.rows)
admit.rows[,3]
rm(list = ls())
##### colors
x1 <- scan()
?colors
colors()
col2rgb("gold2")
?palette
palette()
require(RColorBrewer)
x1
barplot(x1, col = )
install.packages("RColorBrewer")
display.brewer.pal(6, "Gold")
greens <- brewer.pal(6, "Greens")
greens
barplot(x1, col = brewer.pal(6, "Paired"))
gold <- col = "gold"
install.packages("RColorBrewer")
barplot(x1, col = brewer.pal(6, "Paired"))
admit.rows[,3]
?UCBAdmissions
UCBAdmissions$gender
str(UCBAdmissions)
plot(UCBAdmissions)
margin.table(UCBAdmissions)
?margin.table
admit.dept <- margin.table(UCBAdmissions, 3)# new table for admit data
admit_gendr <- margin.table(UCBAdmissions, 2)
barplot(admit_dept)
barplot(admit_gendr)
admit_dept
prop.table(admit.dept)
barplot(round(prop.table(admit.dept), 2)*100)
round(prop.table(admit.dept), 2)*100
admit1 <- as.data.frame(UCBAdmissions)
admit1
colnames(UCBAdmissions)
names(UCBAdmissions)
admit1
admit2 <- lapply(admit1, function(x)rep(x, admit1$Freq))
admit3 <- as.data.frame(admit2)
admit3
admit3 = admit3[ , -4]
admit3
admit3$Admit
admit.rows <- as.data.frame(lapply(as.data.frame(UCBAdmissions), function(x)rep(x, as.data.frame(UCBAdmissions)$Freq)))[ , -4]
str(admit.rows)
admit.rows[,3]
x1 <- scan()
?colors
colors()
col2rgb("gold2")
?palette
palette()
require(RColorBrewer)
x1
barplot(x1, col = )
install.packages("RColorBrewer")
install.packages("RColorBrewer")
x1
x1 <- scan()
x1
barplot(x1, col = "gold2") #deepskyblue1's position alphabetically
?colors
?colors
colors()
col2rgb("gold2")
?palette
palette()
x1
barplot(x1, col = )
barplot(x1, col = rainbow(6) )
install.packages("RColorBrewer")
display.brewer.pal(6, "Gold")
display.brewer.pal(6, "Gold")
display.brewer.pal(6, "Gold")
install.packages("RColorBrewer")
library(RColorBrewer)
display.brewer.pal(6, "Gold")
display.brewer.pal(6, "Greens")
greens <- brewer.pal(6, "Greens")
greens
barplot(x1, col = brewer.pal(6, "Paired"))
hot <- heat.colors(8)
hot
barplot(x1, col = hot)
light <- cm.colors(11)
barplot(x1, col = light)
rm(list =ls())
iris
iris$Petal.Length
hist(iris$Petal.Length)
hist(iris$Petal.Length,
col = "turquoise")
hist(iris$Petal.Length,
col = "turquoise",
main = "Histogram of Iris' Petal Length")
hist(iris$Petal.Length,
col = "turquoise",
main = "Histogram of Iris' Petal Length",
xlab = "Petal Length")
p_len <- hist(iris$Petal.Length,
col = "turquoise",
main = "Histogram of Iris' Petal Length",
xlab = "Petal Length")
p_len
iris
?kernel
pl <- iris$Petal.Length
hist(iris$Petal.Length,
border = 0,
col = "turquoise",
main = "Histogram of Iris' Petal Length",
xlab = "Petal Length")
hist(iris$Petal.Length,
border = 0,
breaks = 12,
col = "turquoise",
main = "Histogram of Iris' Petal Length",
xlab = "Petal Length")
hist(pl,
probability = TRUE,
border = 0,
breaks = 12,
col = "turquoise",
main = "Histogram of Iris' Petal Length",
xlab = "Petal Length")
hist(pl,
probability = TRUE,
border = 0,
breaks = 12,
col = "turquoise",
main = "Histogram of Iris' Petal Length",
xlab = "Petal Length from 3 species of Iris")
hist(pl,
probability = TRUE,
border = 0,
breaks = 12,
col = "turquoise",
main = "Histogram of Iris' Petal Length",
xlab = "Petal Lengths from 3 species of Iris")
?lines
lines(density(pl), col = "black", lwd = 3)
?rug
rug(pl, col = "gold", lwd = 2)
rug(pl, col = "gold", lwd = 1)
rug(pl, col = "gold", lwd = .5)
summary(pl)
pl <- iris$Petal.Length
summary(pl)
head(pl)
pl
pl <- as.data.frame(pl)
pl
unique(pl)
order(pl, decreasing = TRUE)
PL
pl
fivenum(pl)
pl <- iris$Petal.Length
fivenum(pl)
summary(pl)
boxplot(pl,
col = greens)
boxplot(pl,
col = "gold")
boxplot(pl,
col = "gold",
horizontal = TRUE,)
boxplot(pl,
col = "gold",
horizontal = FALSE)
boxplot(pl,
col = "gold",
horizontal = TRUE)
boxplot(pl,
col = "gold",
horizontal = TRUE,
staplety = 0)
boxplot(pl,
col = "gold",
horizontal = TRUE)
?econometrics
??econometrics
library()
search()
rm(list = search())
install.packages("ggplot2")
require("ggplot2")
update.packages()
detach("package:ggplot2", unload = TRUE)
search()
remove.packages("ggplot2")
rm(list=ls())
prop.test(50, 100)
prop.test(98, 162)
prop.test(98, 162,
alt = "greater",
conf.level = .95)
mtcars
mean(mtcars$mpg)
mean(mtcars$hp)
mean(mtcars$qsec)
sd(mtcars$mpg)
data(mtcars)
force(mtcars)
View(mtcars)
require("psych")
d <- describe(mtcars, c[1, 4, 7])
d <- psych::describe(mtcars, c[1, 4, 7])
d <- psych::describe(mtcars, c[1, 4, 7])
install.packages("psych")
install.packages("psych")
install.packages("psych")
require("psych")
d <- describe(mtcars, c[1, 4, 7])
?describe
d <- describe(mtcars[c(1, 4, 7)]
d <- describe(mtcars[c(1, 4, 7)]
d <- describe(mtcars[c(1, 4, 7)])
d
d[3, 4, 11, 12]
d[, (3, 4, 11, 12)]
d[, c(3, 4, 11, 12)]
rm(list = ls())
x1 <- c(12, 32, 43,25, NA, 53)
x1
plot(x1, col = "gold")
plot(x1, col = "darkred")
abline(plot(x1, col = "darkred"))
plot(x1, col = "darkred")
mean(x1)
x1 <- x1 != 'NA'
x1
x1 <- c(12, 32, 43,25, NA, 53)
x1
# x1 <- x1 != 'NA'
# x1
rm(NA, list = x1)
# x1 <- x1 != 'NA'
# x1
which(is.na(x1))
mean(x1, na.rm = T)
x2[is.na(x2)] <- 0
x2 <- x1
x2[is.na(x2)] <- 0
x2
x3 <- ifelse(is.na(x1), 0, x1)
x3
x1 <- c(12, 32, 43, 25, NA, 53)
x3 <- ifelse(is.na(x1), 0, x1)
x3
