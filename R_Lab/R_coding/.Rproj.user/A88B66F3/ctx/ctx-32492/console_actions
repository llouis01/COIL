{
    "data" : [
        "\nR version 3.6.1 (2019-07-05) -- \"Action of the Toes\"\nCopyright (C) 2019 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n[Workspace loaded from ~/GitHub/Data_Analysis/R_Lab/R_coding/.RData]\n\n",
        "> ",
        "rm(list = ls()) # clear console",
        "> ",
        "setwd(\"~/GitHub/Data_Analysis/Mortality_and_Budget\") # setwd()",
        "> ",
        "install.packages('tidyverse') # if necessary",
        "WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\n",
        "Installing package into â€˜C:/Users/Loube/Documents/R/win-library/3.6â€™\n(as â€˜libâ€™ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/tidyverse_1.3.0.zip'\n",
        "Content type 'application/zip'",
        " length 440114 bytes (429 KB)\n",
        "downloaded 429 KB\n\n",
        "package â€˜tidyverseâ€™ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\Loube\\AppData\\Local\\Temp\\Rtmpgz4GEo\\downloaded_packages\n",
        "> ",
        "require(\"tidyverse\")",
        "Loading required package: tidyverse\n",
        "[37m-- [1mAttaching packages[22m --------------------------------------- tidyverse 1.3.0 --[39m\n",
        "[37m[32mv[37m [34mggplot2[37m 3.3.0     [32mv[37m [34mpurrr  [37m 0.3.4\n[32mv[37m [34mtibble [37m 3.0.1     [32mv[37m [34mdplyr  [37m 0.8.5\n[32mv[37m [34mtidyr  [37m 1.0.2     [32mv[37m [34mstringr[37m 1.4.0\n[32mv[37m [34mreadr  [37m 1.3.1     [32mv[37m [34mforcats[37m 0.5.0[39m\n",
        "[37m-- [1mConflicts[22m ------------------------------------------ tidyverse_conflicts() --\n[31mx[37m [34mdplyr[37m::[32mfilter()[37m masks [34mstats[37m::filter()\n[31mx[37m [34mdplyr[37m::[32mlag()[37m    masks [34mstats[37m::lag()[39m\n",
        "Warning messages:\n",
        "1: package â€˜tidyverseâ€™ was built under R version 3.6.3 \n",
        "2: package â€˜ggplot2â€™ was built under R version 3.6.3 \n",
        "3: package â€˜tibbleâ€™ was built under R version 3.6.3 \n",
        "4: package â€˜tidyrâ€™ was built under R version 3.6.3 \n",
        "5: package â€˜readrâ€™ was built under R version 3.6.3 \n",
        "6: package â€˜purrrâ€™ was built under R version 3.6.3 \n",
        "7: package â€˜dplyrâ€™ was built under R version 3.6.3 \n",
        "8: package â€˜stringrâ€™ was built under R version 3.6.3 \n",
        "9: package â€˜forcatsâ€™ was built under R version 3.6.3 \n",
        "> ",
        "mort_data <- read_csv(\"Data_sets/mortality_data.csv\", col_names = TRUE)",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  age = [31mcol_character()[39m,\n  mx = [32mcol_double()[39m,\n  qx = [32mcol_double()[39m,\n  ax = [32mcol_double()[39m,\n  lx = [32mcol_double()[39m,\n  dx = [32mcol_double()[39m,\n  Lx = [32mcol_double()[39m,\n  Tx = [32mcol_double()[39m,\n  ex = [32mcol_double()[39m\n)\n",
        "> ",
        "View(mort_data)",
        "> ",
        "mort_data = mort_data[(mort_data$year >= 1993",
        "+ ",
        "                                 &",
        "+ ",
        "                              mort_data$year <= 2015),]",
        "> ",
        "View(mort_data)",
        "> ",
        "typeof(mort_data)",
        "[1] \"list\"\n",
        "> ",
        "colnames(mort_data)[4:11] = c(\"mort_data\", \"prob_death\", \"ave_length_surv\", \"num_of_surv\", \"num_of_deaths\", \"num_years_lived\", \"num_years_left\", \"life_expec\") # colnames(file)[index] to rename columns",
        "> ",
        "mort_data # check if object is generated successfully",
        "[38;5;246m# A tibble: 27,600 x 11[39m\n   state  year age   mort_data prob_death ave_length_surv num_of_surv\n   [3m[38;5;246m<chr>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<chr>[39m[23m     [3m[38;5;246m<dbl>[39m[23m      [3m[38;5;246m<dbl>[39m[23m           [3m[38;5;246m<dbl>[39m[23m       [3m[38;5;246m<dbl>[39m[23m\n[38;5;250m 1[39m Alas~  [4m1[24m993 0      0.008[4m5[24m[4m8[24m     0.008[4m5[24m[4m1[24m            0.07      [4m1[24m[4m0[24m[4m0[24m000\n[38;5;250m 2[39m Alas~  [4m1[24m993 4-Jan  0.000[4m6[24m[4m0[24m[4m0[24m    0.002[4m3[24m[4m9[24m            1.82       [4m9[24m[4m9[24m149\n[38;5;250m 3[39m Alas~  [4m1[24m993 9-May  0.000[4m2[24m[4m6[24m[4m0[24m    0.001[4m2[24m[4m8[24m            2.16       [4m9[24m[4m8[24m912\n[38;5;250m 4[39m Alas~  [4m1[24m993 14-O~  0.000[4m5[24m[4m6[24m[4m0[24m    0.002[4m8[24m[4m1[24m            2.75       [4m9[24m[4m8[24m785\n[38;5;250m 5[39m Alas~  [4m1[24m993 15-19  0.001[4m1[24m      0.005[4m4[24m[4m6[24m            2.34       [4m9[24m[4m8[24m508\n[38;5;250m 6[39m Alas~  [4m1[24m993 20-24  0.001[4m4[24m[4m5[24m     0.007[4m2[24m[4m3[24m            2.29       [4m9[24m[4m7[24m970\n[38;5;250m 7[39m Alas~  [4m1[24m993 25-29  0.001[4m9[24m      0.009[4m4[24m[4m3[24m            2.33       [4m9[24m[4m7[24m261\n[38;5;250m 8[39m Alas~  [4m1[24m993 30-34  0.001[4m6[24m[4m7[24m     0.008[4m3[24m[4m4[24m            2.47       [4m9[24m[4m6[24m344\n[38;5;250m 9[39m Alas~  [4m1[24m993 35-39  0.001[4m6[24m      0.007[4m9[24m[4m8[24m            2.48       [4m9[24m[4m5[24m541\n[38;5;250m10[39m Alas~  [4m1[24m993 40-44  0.002[4m4[24m[4m6[24m     0.012[4m2[24m             2.55       [4m9[24m[4m4[24m779\n[38;5;246m# ... with 27,590 more rows, and 4 more variables:[39m\n[38;5;246m#   num_of_deaths [3m[38;5;246m<dbl>[38;5;246m[23m, num_years_lived [3m[38;5;246m<dbl>[38;5;246m[23m, num_years_left [3m[38;5;246m<dbl>[38;5;246m[23m,[39m\n[38;5;246m#   life_expec [3m[38;5;246m<dbl>[38;5;246m[23m[39m",
        "\n",
        "> ",
        "mort_data$tmp = stringr::str_locate(mort_data$age, \"-\")[ , 1]",
        "> ",
        "mort_data$age2 <- stringr::str_sub(mort_data$age, 1,",
        "+ ",
        "                                        mort_data$tmp-1)",
        "> ",
        "mort_data$age2[mort_data$age == \"0\"] = \"0\"",
        "> ",
        "\"I think changing the 0's and 110+'s is better if executed soon after the creation",
        "+ ",
        "of age2; since I tried updating them after creating the age_group and they still",
        "+ ",
        "remained.\"",
        "[1] \"I think changing the 0's and 110+'s is better if executed soon after the creation\\nof age2; since I tried updating them after creating the age_group and they still\\nremained.\"\n",
        "> ",
        "mort_data$age2[mort_data$age == \"110+\"] = \"110\"",
        "> ",
        "mort_data$age2 = as.numeric(mort_data$age2)",
        "> ",
        "mort_data$age_group <- cut(mort_data$age2,",
        "+ ",
        "                           breaks = c(0, 18, 64, 110),",
        "+ ",
        "                           labels = c(\"<18\", \"18-64\", \">64\"),",
        "+ ",
        "                           include.lowest = TRUE)",
        "> ",
        "mort_data = mort_data[ , -c(3, 12, 13)]",
        "> ",
        "mort_data = mort_data[ , c(1, 2, 11, 3:10)]",
        "> ",
        "mort_data <- aggregate(.~ state + year + age_group,",
        "+ ",
        "                       data = mort_data,",
        "+ ",
        "                       FUN = function(x) {sum(x, na.rm = T)})",
        "> ",
        "mort_data <- mort_data[order(mort_data$state, mort_data$year), ]",
        "> ",
        "inc_data <- read.csv(\"Data_sets/income_data.csv\")",
        "> ",
        "inc_data = reshape(inc_data,",
        "+ ",
        "                    varying = names(inc_data)[2:24],",
        "+ ",
        "                    timevar = \"year\",",
        "+ ",
        "                    sep = \".\",",
        "+ ",
        "                    direction = \"long\")",
        "> ",
        "inc_data = inc_data[ , -4]",
        "> ",
        "inc_data = inc_data[order(inc_data$state, inc_data$year), ]",
        "> ",
        "setwd(\"~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/education\")",
        "> ",
        "file_list = list.files(path = \"~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/education\")",
        "> ",
        "educ_data = data.frame()",
        "> ",
        "for (f in 1:length(file_list)){",
        "+ ",
        "  temp_data <- read_csv(file_list[f], col_names = TRUE)",
        "+ ",
        "  colnames(temp_data) <- c(\"state\", \"year\", \"percent_highschool\", \"percent_college\")",
        "+ ",
        "  educ_data <- rbind(educ_data, temp_data)",
        "+ ",
        "}",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m\n)\n",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m\n)\n",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m\n)\n",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m\n)\n",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m\n)\n",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m\n)\n",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m\n)\n",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m\n)\n",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m\n)\n",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m\n)\n",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m\n)\n",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  Pprcent_college = [32mcol_double()[39m\n)\n",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m\n)\n",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m\n)\n",
        "> ",
        "education_0715 <- read_csv(\"~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/education_0715.csv\")",
        "Parsed with column specification:\ncols(\n  state = [31mcol_character()[39m,\n  year = [32mcol_double()[39m,\n  percent_college = [32mcol_double()[39m,\n  percent_highschool = [32mcol_double()[39m\n)\n",
        "> ",
        "educ_data <- rbind(educ_data, education_0715)",
        "> ",
        "colnames(educ_data) <- c('state', 'year', 'phs', 'pcoll')",
        "> ",
        "rm(file_list, temp_data, f, education_0715)",
        "> ",
        "setwd(\"~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/expenditure\")",
        "> ",
        "file_list <- list.files(path = \"~/GitHub/Data_Analysis/Mortality_and_Budget/Data_sets/expenditure\")",
        "> ",
        "expnd_data <- data.frame()",
        "> ",
        "for (f in 1:length(file_list)){",
        "+ ",
        "  temp_data <- read_csv(file_list[f], col_names = T)",
        "+ ",
        "  colnames(temp_data) <- c('state', 'year', 'tot_revenue',",
        "+ ",
        "                           'taxes','tot_expnd',",
        "+ ",
        "                           'education', 'public_welfare',",
        "+ ",
        "                           'hospital', 'health')",
        "+ ",
        "  expnd_data <- rbind(expnd_data, temp_data)",
        "+ ",
        "}",
        "Parsed with column specification:\ncols(\n  `<table style=\"text-align:center\"><caption><strong>Statistical Summary of Data</strong></caption>` = [31mcol_character()[39m\n)\n",
        "Warning:",
        " 19 parsing failures.\nrow col  expected    actual                file\n  2  -- 1 columns 7 columns 'Descriptives.docx'\n  3  -- 1 columns 2 columns 'Descriptives.docx'\n  4  -- 1 columns 2 columns 'Descriptives.docx'\n  5  -- 1 columns 2 columns 'Descriptives.docx'\n  6  -- 1 columns 8 columns 'Descriptives.docx'\n... ... ......... ......... ...................\nSee problems(...) for more details.\n\n",
        "Parsed with column specification:\ncols(\n  State = [31mcol_character()[39m,\n  Year = [32mcol_double()[39m,\n  Total_revenue = [32mcol_number()[39m,\n  Taxes = [32mcol_number()[39m,\n  Total_expenditure = [32mcol_number()[39m,\n  Education = [32mcol_number()[39m,\n  Public_welfare = [32mcol_number()[39m,\n  Hospitals = [32mcol_number()[39m,\n  Health = [32mcol_number()[39m\n)\n",
        "Error in rbind(deparse.level, ...) : \n  numbers of columns of arguments do not match\n",
        "> ",
        "rm(temp_data, file_list, f)",
        "> ",
        "data = merge(inc_data, educ_data, by = c('state', 'year'))",
        "> ",
        "data = merge(data, expnd_data, by = c('state', 'year'))",
        "Error in fix.by(by.y, y) : 'by' must specify a uniquely valid column\n",
        "> ",
        "data <- merge(mort_data, data, by = c('state', 'year'))",
        "> ",
        "rm(mort_data, educ_data, expnd_data)",
        "> ",
        "data[ , c('pinc', 'tot_revenue', 'taxes', 'tot_expnd',",
        "+ ",
        "          'education', 'public_welfare', 'hospital',",
        "+ ",
        "          'health')] = data[ , c('pinc', 'tot_revenue',",
        "+ ",
        "                                 'taxes', 'tot_expnd',",
        "+ ",
        "                                 'education',",
        "+ ",
        "                                 'public_welfare','hospital',",
        "+ ",
        "                                 'health')]/10000",
        "Error in `[.data.frame`(data, , c(\"pinc\", \"tot_revenue\", \"taxes\", \"tot_expnd\",  : \n  undefined columns selected\n",
        "> ",
        "data[, c('phs', 'pcoll')] = data[ , c('phs', 'pcoll')]/100",
        "> ",
        "setwd(\"~/GitHub/Data_Analysis/Mortality_and_Budget\")",
        "> ",
        "stargazer::stargazer(data,",
        "+ ",
        "                     type = \"html\",",
        "+ ",
        "                     out = 'Descriptives.doc',",
        "+ ",
        "                     title = 'Statistical Summary of Data')",
        "\n<table style=\"text-align:center\"><caption><strong>Statistical Summary of Data</strong></caption>\n<tr><td colspan=\"8\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\">Statistic</td><td>N</td><td>Mean</td><td>St. Dev.</td><td>Min</td><td>Pctl(25)</td><td>Pctl(75)</td><td>Max</td></tr>\n<tr><td colspan=\"8\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\">year</td><td>3,450</td><td>2,004.000</td><td>6.634</td><td>1,993</td><td>1,998</td><td>2,010</td>",
        "<td>2,015</td></tr>\n<tr><td style=\"text-align:left\">mort_data</td><td>3,450</td><td>0.846</td><td>1.168</td><td>0.005</td><td>0.010</td><td>2.424</td><td>2.937</td></tr>\n<tr><td style=\"text-align:left\">prob_death</td><td>3,450</td><td>1.878</td><td>2.527</td><td>0.007</td><td>0.015</td><td>5.346</td><td>5.865</td></tr>\n<tr><td style=\"text-align:left\">ave_length_surv</td><td>3,450</td><td>18.439</td><td>6.137</td><td>7.780</td><td>10.070</td><td>23.410</td><td>24.750</td></tr>\n<tr><td style=\"text-align:left\"",
        ">num_of_surv</td><td>3,450</td><td>566,376.400</td><td>214,051.300</td><td>284,930</td><td>367,432.5</td><td>849,940.2</td><td>870,835</td></tr>\n<tr><td style=\"text-align:left\">num_of_deaths</td><td>3,450</td><td>33,333.320</td><td>35,569.750</td><td>693</td><td>1,527</td><td>80,883</td><td>88,087</td></tr>\n<tr><td style=\"text-align:left\">num_years_lived</td><td>3,450</td><td>2,582,486.000</td><td>1,189,758.000</td><td>1,233,339</td><td>1,624,137.0</td><td>4,208,052.0</td><td>4,326,815</td></tr>\n<tr><td style=\"text-align:left\"",
        ">num_years_left</td><td>3,450</td><td>24,802,456.000</td><td>14,573,129.000</td><td>3,256,397</td><td>4,620,922.0</td><td>35,687,980.0</td><td>37,974,876</td></tr>\n<tr><td style=\"text-align:left\">life_expec</td><td>3,450</td><td>263.631</td><td>135.314</td><td>64.400</td><td>75.220</td><td>362.705</td><td>391.350</td></tr>\n<tr><td style=\"text-align:left\">pinc</td><td>3,450</td><td>33,696.900</td><td>9,614.604</td><td>15,667</td><td>25,967</td><td>40,047</td><td>68,288</td></tr>\n<tr><td style=\"text-align:left\"",
        ">phs</td><td>3,450</td><td>0.865</td><td>0.048</td><td>0.685</td><td>0.836</td><td>0.900</td><td>0.961</td></tr>\n<tr><td style=\"text-align:left\">pcoll</td><td>3,450</td><td>0.265</td><td>0.056</td><td>0.114</td><td>0.224</td><td>0.301</td><td>0.443</td></tr>\n<tr><td colspan=\"8\" style=\"border-bottom: 1px solid black\"></td></tr></table>\n",
        "> ",
        "# created a subset for >= 65 years-old",
        "> ",
        "reg_65 <- data[data$age_group=='>64', ]",
        "> ",
        "reg1 <- lm(mort_data ~ health + hospital +",
        "+ ",
        "           log(pinc) + phs + pcoll,",
        "+ ",
        "           data = reg_65)",
        "Error in eval(predvars, data, env) : object 'health' not found\n",
        "> ",
        "reg2 <- lm(mort_data ~ health + hospital +",
        "+ ",
        "           log(pinc) + phs + pcoll + state,",
        "+ ",
        "           data = reg_65)",
        "Error in eval(predvars, data, env) : object 'health' not found\n",
        "> ",
        "reg3 <- lm(mort_data ~ health + hospital +",
        "+ ",
        "           log(pinc) + phs + pcoll + state + year,",
        "+ ",
        "           data = reg_65)",
        "Error in eval(predvars, data, env) : object 'health' not found\n",
        "> ",
        "stargazer::stargazer(reg1, reg2, reg3,",
        "+ ",
        "                     type = 'html',",
        "+ ",
        "                     out = 'Regressions2.doc',",
        "+ ",
        "                     out.header = T)",
        "Error in .stargazer.wrap(..., type = type, title = title, style = style,  : \n  object 'reg1' not found\n",
        "> ",
        "summary(reg1)",
        "Error in summary(reg1) : object 'reg1' not found\n",
        "> ",
        "summary(reg2)",
        "Error in summary(reg2) : object 'reg2' not found\n",
        "> ",
        "summary(reg3$coefficients)",
        "Error in summary(reg3$coefficients) : object 'reg3' not found\n",
        "> ",
        "hist(reg1$residuals,",
        "+ ",
        "     main = \"Histogram of Reg1 Residuals\",",
        "+ ",
        "     xlab = \"Residuals\",",
        "+ ",
        "     col = \"turquoise\")",
        "Error in hist(reg1$residuals, main = \"Histogram of Reg1 Residuals\", xlab = \"Residuals\",  : \n  object 'reg1' not found\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "View(reg_65)",
        "> ",
        "install.packages(\"readr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"stringr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "",
        "> ",
        "mort_data = read.table(\"mortality_data.csv\", header = TRUE, sep = \",\")",
        "Error in file(file, \"rt\") : cannot open the connection\n",
        "> ",
        "mortality_data = mortality_data[(mortality_data$year >= 1993 ",
        "+ ",
        "                                 & mortality_data$year <= 2015),]",
        "Error: object 'mortality_data' not found\n",
        "> ",
        "colnames(mortality_data)[4:11] = c(\"col_name\", \"col_name\", \"col_name\", ",
        "+ ",
        "                                   \"col_name\", \"col_name\",",
        "+ ",
        "                                   \"col_name\", \"col_name\")",
        "Error in colnames(mortality_data)[4:11] = c(\"col_name\", \"col_name\", \"col_name\",  : \n  object 'mortality_data' not found\n",
        "\nRestarting R session...\n\n"
    ],
    "type" : [
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2
    ]
}