las = 1)
reg1 <- lm(data$BODYFAT~., data = data)
# probability plot for body fat
reg1 <- lm(data$BODYFAT~data$WEIGHT, data = data)
View(reg1)
res1 <- rstandard(reg1)
qqline(res1)
qqplot(res1)
qqplot(res1)
qqnorm(res1)
qqline(res1)
qqnorm(res1,
ylab="Standardized Residuals",
xlab="Normal Scores",
col = 'red')
qqline(res1)
# # probability plot for body weight
reg2 <- lm(data$WEIGHT~data$BODYFAT, data = data)
res2 <- rstandard(reg2)
qqnorm(res2,
ylab="Standardized Residuals",
xlab="Normal Scores",
col = 'turquoise')
qqline(res2)
# probability plot for body fat
reg1 <- lm(data$BODYFAT~data$WEIGHT+data$HEIGHT, data = data)
res1 <- rstandard(reg1)
qqnorm(res1,
ylab="Standardized Residuals",
xlab="Normal Scores",
col = 'red')
qqline(res1)
# # probability plot for body weight
reg2 <- lm(data$WEIGHT~data$BODYFAT+data$HEIGHT, data = data)
res2 <- rstandard(reg2)
qqnorm(res2,
ylab="Standardized Residuals",
xlab="Normal Scores",
col = 'turquoise')
qqline(res2)
# probability plot for height
reg3 <- lm(data$HEIGHT~data$BODYFAT+data$WEIGHT, data = data)
res3 <- rstandard(reg3)
qqnorm(res3,
ylab="Standardized Residuals",
xlab="Normal Scores",
col = 'gold')
qqline(res3)
qqnorm(res3,
ylab="Standardized Residuals",
xlab="Normal Scores",
col = 'blue')
qqline(res3)
View(reg1)
reg1[["fitted.values"]]
rstandard
mean_fat <- mean(data$BODYFAT)
mean_fat
mean_wght <- mean(data$WEIGHT)
mean_hght <- mean(data$HEIGHT)
sd_fat <- sd(data$BODYFAT)
sd_wght <- sd(data$WEIGHT)
sd_hght <- sd(data$HEIGHT)
mean_fat
sd_fat
mean(data$BODYFAT)
sd(data$BODYFAT)
mean(data$WEIGHT)
sd(data$WEIGHT)
mean(data$HEIGHT)
sd(data$HEIGHT)
mean_fat <- mean(data$BODYFAT)
sd_fat <- sd(data$BODYFAT)
mean_wght <- mean(data$WEIGHT)
sd_wght <- sd(data$WEIGHT)
mean_hght <- mean(data$HEIGHT)
sd_hght <- sd(data$HEIGHT)
# 4h
fat_lwr_bound_1st <- mean_fat - sd_fat
fat_lwr_bound_2nd <- mean_fat - (2*sd_fat)
fat_lwr_bound_3rd <- mean_fat - (3*sd_fat)
fat_upr_bound_1st <- mean_fat + sd_fat
fat_upr_bound_2nd <- mean_fat + (2*sd_fat) # 2 sd
fat_upr_bound_3rd <- mean_fat + (3*sd_fat) # 3 sd
nrow(data$BODYFAT)
sum(data$BODYFAT > fat_lwr_bound_1st & data$BODYFAT < fat_upr_bound_1st)
(pnorm(fat_upr_bound_1st, mean_fat, sd_fat) - pnorm(fat_lwr_bound_1st, mean_fat, sd_fat)
(pnorm(fat_upr_bound_1st, mean_fat, sd_fat) - pnorm(fat_lwr_bound_1st, mean_fat, sd_fat))
(pnorm(fat_upr_bound_1st, mean_fat, sd_fat) - pnorm(fat_lwr_bound_1st, mean_fat, sd_fat))
(pnorm(fat_upr_bound_1st, mean_fat, sd_fat) - pnorm(fat_lwr_bound_1st, mean_fat, sd_fat)))
(pnorm(fat_upr_bound_1st, mean_fat, sd_fat) - pnorm(fat_lwr_bound_1st, mean_fat, sd_fat))
View(data)
nrow(data$BODYFAT)
nrow(data)
166/252
# actual count per sd bin
sum(data$BODYFAT > fat_lwr_bound_1st & data$BODYFAT < fat_upr_bound_1st) / nrow(data)
# actual count per sd bin
(sum(data$BODYFAT > fat_lwr_bound_1st & data$BODYFAT < fat_upr_bound_1st) / nrow(data)) * nrow(data)
# actual count per sd bin
((sum(data$BODYFAT > fat_lwr_bound_1st & data$BODYFAT < fat_upr_bound_1st) / nrow(data)) * nrow(data)) / nrow(data)
# actual count per sd bin
((sum(data$BODYFAT > fat_lwr_bound_1st & data$BODYFAT < fat_upr_bound_1st) / nrow(data)) * nrow(data))
.6827 * 252
((sum(data$BODYFAT > fat_lwr_bound_2nd & data$BODYFAT < fat_upr_bound_2nd) / nrow(data)) * nrow(data))
((sum(data$BODYFAT > fat_lwr_bound_2nd & data$BODYFAT < fat_upr_bound_2nd) / nrow(data))
((sum(data$BODYFAT > fat_lwr_bound_2nd & data$BODYFAT < fat_upr_bound_2nd) / nrow(data)
((sum(data$BODYFAT > fat_lwr_bound_2nd & data$BODYFAT < fat_upr_bound_2nd) / nrow(data)
(sum(data$BODYFAT > fat_lwr_bound_2nd & data$BODYFAT < fat_upr_bound_2nd) / nrow(data)
sum(data$BODYFAT > fat_lwr_bound_2nd & data$BODYFAT < fat_upr_bound_2nd) / nrow(data)
(sum(data$BODYFAT > fat_lwr_bound_2nd & data$BODYFAT < fat_upr_bound_2nd) / nrow(data)
(sum(data$BODYFAT > fat_lwr_bound_2nd & data$BODYFAT < fat_upr_bound_2nd) / nrow(data)
sum(data$BODYFAT > fat_lwr_bound_2nd & data$BODYFAT < fat_upr_bound_2nd) / nrow(data)
sum(data$BODYFAT > fat_lwr_bound_2nd & data$BODYFAT < fat_upr_bound_2nd) / nrow(data)
.9547 * 252
(sum(data$BODYFAT > fat_lwr_bound_2nd & data$BODYFAT < fat_upr_bound_2nd) / nrow(data)) * nrow(data)
mean_fat - (2*sd_fat)
mean_fat + (2*sd_fat)
(sum(data$BODYFAT > fat_lwr_bound_3rd & data$BODYFAT < fat_upr_bound_3rd) / nrow(data)) * nrow(data)
sum(data$BODYFAT > fat_lwr_bound_3rd & data$BODYFAT < fat_upr_bound_3rd) / nrow(data)
(sum(data$BODYFAT > fat_lwr_bound_3rd & data$BODYFAT < fat_upr_bound_3rd) / nrow(data)) * nrow(data)
#  actual count per sd bin for body height 4G
((sum(data$HEIGHT > fat_lwr_bound_1st & data$HEIGHT < fat_upr_bound_1st) / nrow(data)) * nrow(data))
((sum(data$HEIGHT > fat_lwr_bound_2nd & data$HEIGHT < fat_upr_bound_2nd) / nrow(data)) * nrow(data))
((sum(data$HEIGHT > fat_lwr_bound_3rd & data$HEIGHT < fat_upr_bound_3rd) / nrow(data)) * nrow(data))
hgt_lwr_bound_1st <- mean_hght - sd_hght # -1 sd
hgt_lwr_bound_2nd <- mean_hght - (2*sd_hght) # -2 sd
hgt_lwr_bound_3rd <- mean_hght - (3*sd_hght) # -3 sd
hgt_upr_bound_1st <- mean_hght + sd_hght # 1 sd
hgt_upr_bound_2nd <- mean_hght + (2*sd_hght) # 2 sd
hgt_upr_bound_3rd <- mean_hght + (3*sd_hght) # 3 sd
#  actual count per sd bin for body height 4G
((sum(data$HEIGHT > hgt_lwr_bound_1st & data$HEIGHT < hgt_upr_bound_1st) / nrow(data)) * nrow(data))
((sum(data$HEIGHT > hgt_lwr_bound_2nd & data$HEIGHT < hgt_upr_bound_2nd) / nrow(data)) * nrow(data))
((sum(data$HEIGHT > hgt_lwr_bound_3rd & data$HEIGHT < hgt_upr_bound_3rd) / nrow(data)) * nrow(data))
#  actual count per sd bin for body height 4G
((sum(data$HEIGHT > hgt_lwr_bound_1st & data$HEIGHT < hgt_upr_bound_1st) / nrow(data)
(sum(data$HEIGHT > hgt_lwr_bound_1st & data$HEIGHT < hgt_upr_bound_1st) / nrow(data)
(sum(data$HEIGHT > hgt_lwr_bound_1st & data$HEIGHT < hgt_upr_bound_1st) / nrow(data)
(sum(data$HEIGHT > hgt_lwr_bound_1st & data$HEIGHT < hgt_upr_bound_1st) / nrow(data)
#  actual count per sd bin for body height 4G
sum(data$HEIGHT > hgt_lwr_bound_1st & data$HEIGHT < hgt_upr_bound_1st) / nrow(data)
sum(data$HEIGHT > hgt_lwr_bound_1st & data$HEIGHT < hgt_upr_bound_1st) / nrow(data)
sum(data$HEIGHT > hgt_lwr_bound_1st & data$HEIGHT < hgt_upr_bound_1st) / nrow(data) * 252
.6827 * 252
sum(data$HEIGHT > hgt_lwr_bound_2nd & data$HEIGHT < hgt_upr_bound_2nd) / nrow(data)
sum(data$HEIGHT > hgt_lwr_bound_2nd & data$HEIGHT < hgt_upr_bound_2nd) / nrow(data)) * nrow(data))
(
((sum(data$HEIGHT > hgt_lwr_bound_2nd & data$HEIGHT < hgt_upr_bound_2nd) / nrow(data)) * nrow(data))
((sum(data$HEIGHT > hgt_lwr_bound_2nd & data$HEIGHT < hgt_upr_bound_2nd) / nrow(data)) * nrow(data))
((sum(data$HEIGHT > hgt_lwr_bound_2nd & data$HEIGHT < hgt_upr_bound_2nd) / nrow(data)) * nrow(data))
((sum(data$HEIGHT > hgt_lwr_bound_3rd & data$HEIGHT < hgt_upr_bound_3rd) / nrow(data)) * nrow(data))
sum(data$HEIGHT > hgt_lwr_bound_3rd & data$HEIGHT < hgt_upr_bound_3rd) / nrow(data)
# actual count per sd bin for body height 4G
((sum(data$WEIGHT > wght_lwr_bound_1st & data$wEIGHT < wght_upr_bound_1st) / nrow(data)) * nrow(data))
wght_lwr_bound_1st <- mean_wght - sd_wght # -1 sd
wght_lwr_bound_2nd <- mean_wght - (2 * sd_wght) # -2 sd
wght_lwr_bound_3rd <- mean_wght - (3 * sd_wght) # -3 sd
wght_upr_bound_1st <- mean_wght + sd_wght # 1 sd
wght_upr_bound_2nd <- mean_wght + (2 * sd_wght) # 2 sd
wght_upr_bound_3rd <- mean_wght + (3 * sd_wght) # 3 sd
# actual count per sd bin for body height 4G
((sum(data$WEIGHT > wght_lwr_bound_1st & data$wEIGHT < wght_upr_bound_1st) / nrow(data)) * nrow(data))
((sum(data$wEIGHT > wght_lwr_bound_2nd & data$wEIGHT < wght_upr_bound_2nd) / nrow(data)) * nrow(data))
sum(data$wEIGHT > wght_lwr_bound_3rd & data$wEIGHT < wght_upr_bound_3rd) / nrow(data)
((sum(data$HEIGHT > hgt_lwr_bound_3rd & data$HEIGHT < hgt_upr_bound_3rd) / nrow(data)
((sum(data$WEIGHT > wght_lwr_bound_1st & data$wEIGHT < wght_upr_bound_1st) / nrow(data)) * nrow(data))
# actual count per sd bin for body height 4G
((sum(data$WEIGHT > wght_lwr_bound_1st & data$wEIGHT < wght_upr_bound_1st) / nrow(data)) * nrow(data))
((sum(data$WEIGHT > wght_lwr_bound_1st & data$wEIGHT < wght_upr_bound_1st) / nrow(data)) * nrow(data))
((sum(data$WEIGHT > wght_lwr_bound_3rd & data$WEIGHT < wght_upr_bound_3rd) / nrow(data)) * nrow(data))
# actual count per sd bin for body height 4G
((sum(data$WEIGHT > wght_lwr_bound_1st & data$wEIGHT < wght_upr_bound_1st) / nrow(data)) * nrow(data))
((sum(data$WEIGHT > wght_lwr_bound_1st & data$wEIGHT < wght_upr_bound_1st) / nrow(data)) * nrow(data))
data$WEIGHT
((sum(data$BODYFAT > fat_lwr_bound_1st & data$BODYFAT < fat_upr_bound_1st) / nrow(data)) * nrow(data))
(sum(data$BODYFAT > fat_lwr_bound_2nd & data$BODYFAT < fat_upr_bound_2nd) / nrow(data)) * nrow(data)
(sum(data$BODYFAT > fat_lwr_bound_3rd & data$BODYFAT < fat_upr_bound_3rd) / nrow(data)) * nrow(data)
((sum(data$HEIGHT > hgt_lwr_bound_1st & data$HEIGHT < hgt_upr_bound_1st) / nrow(data)) * nrow(data))
((sum(data$HEIGHT > hgt_lwr_bound_2nd & data$HEIGHT < hgt_upr_bound_2nd) / nrow(data)) * nrow(data))
((sum(data$HEIGHT > hgt_lwr_bound_3rd & data$HEIGHT < hgt_upr_bound_3rd) / nrow(data)) * nrow(data))
((sum(data$WEIGHT > wght_lwr_bound_1st & data$wEIGHT < wght_upr_bound_1st) / nrow(data)) * nrow(data))
sum(data$WEIGHT > wght_lwr_bound_1st & data$wEIGHT < wght_upr_bound_1st)
data$WEIGHT>178
sum(data$WEIGHT>178)
hgt_lwr_bound_1st
wght_lwr_bound_1st
data$wEIGHT < wght_upr_bound_1st
wght_upr_bound_1st
data$WEIGHT
data$WEIGHT < 208
data$WEIGHT < wght_upr_bound_1st
(sum(data$WEIGHT > wght_lwr_bound_1st & data$wEIGHT < wght_upr_bound_1st) / nrow(data)) * nrow(data)
sum(data$WEIGHT > wght_lwr_bound_1st & data$wEIGHT < wght_upr_bound_1st)
data$WEIGHT < wght_upr_bound_1st
# actual count per sd bin for body weight 4G
sum(data$WEIGHT > wght_lwr_bound_1st & data$wEIGHT < wght_upr_bound_1st)
sum(data$WEIGHT > wght_lwr_bound_1st)
data$wEIGHT < wght_upr_bound_1st
help(&&)
sum(data$WEIGHT > wght_lwr_bound_1st & data$WEIGHT < wght_upr_bound_1st)
sum(data$WEIGHT > wght_lwr_bound_2nd & data$WEIGHT < wght_upr_bound_2nd)
sum(data$WEIGHT > wght_lwr_bound_3rd & data$WEIGHT < wght_upr_bound_3rd
sum(data$WEIGHT > wght_lwr_bound_3rd & data$WEIGHT < wght_upr_bound_3rd)
sum(data$WEIGHT > wght_lwr_bound_3rd & data$WEIGHT < wght_upr_bound_3rd)
# actual count per sd bin for body weight 4G
sum(data$WEIGHT > wght_lwr_bound_1st & data$WEIGHT < wght_upr_bound_1st)
sum(data$WEIGHT > wght_lwr_bound_2nd & data$WEIGHT < wght_upr_bound_2nd)
sum(data$WEIGHT > wght_lwr_bound_3rd & data$WEIGHT < wght_upr_bound_3rd)
182/252
245/252
251/252
rm(list=ls())
a = list()
y = c(34, "76")
a.append(y)
a(y)
append(a, y)
a
a = list(1:9, pi, "cocorico")
a
a = list(1:9, pi, "cocorico", FALSE, 4 - 3i, matrix(9, 2, 2))
a
a = list(1:9, pi, "cocorico", FALSE, 4 - 3i, matrix(9, 2, 2), dog = c('paws', 'fangs', 'bark'))
a
list[[2]]
list[[6]]
a[[6]]
a[[2]]
a[[2], [2, 1]]
a[[2]]
a[[3]]
a[3][2]
a[3][1]
is.atomic(a)
names(a)
class(a)
length(a)
a[-1]
a
unlist(a)
a
un_a <- unlist(a)
a
list2 <- list(x = 1:6, y = month.abb, zcomplex = 4 + 3i)
list2
list[[1]]
list2[[1]]
list2$x
list2[[3]]
rm(list=ls())
data.frame(c(1:100))
x = 3:6
y = 6:9
data.frame(x, y)
rownames(c('a', 'b', 'c'))
bool = c(T, F, T, F ,T)
numb = 4:8
comp = complex(5, 2:6, 6:2)
char = LETTERS[18:22]
d = data.frame(bool, numb, comp, char,)
d = data.frame(bool, numb, comp, char)
d
str(D)
str(d)
summary(d)
d
d['numb']
d[5,3]
d[2,]
d[,2]
d[1, 2] * 3
d[['numb']]
d4numb
d$numb
charity = data.frame(cash = 1:3, check = 2:4, credit = 3:5)
charity = data.frame(cash = 1:3, check = 2:4, credit = 3:5, )
charity = data.frame(cash = 1:3, check = 2:4, credit = 3:5,
rownames = c("Huey", "Dewey", "Louie")
charity = data.frame(cash = 1:3, check = 2:4, credit = 3:5,
rownames = c("Huey", "Dewey", "Louie")
View(charity)
charity = data.frame(cash = 1:3, check = 2:4, credit = 3:5, row.names = c("Huey", 'Dewey', 'Louie'))
charity
charity2 = transform(charity, total = cash + check + credit)
charity2
subset(charity2, credit > 3, select = c(cash, total))
subset(charity, cash > 4, select = c(cash, total))
subset(charity2, cash > 4, select = c(cash, total))
subset(charity2, cash > 3, select = c(cash, total))
subset(charity2, cash > 2, select = c(cash, total))
library(help = 'datasets')
state.x77
help(state.x77)
state.x77['Wyoming']
state.x77[8]
state.x77[8, ]
state.x77[ ,8 ]
sort(state.x77[ ,8 ])
ill = state.x77[ , 3]
ill
head9ill
head(ill)
frost = state.x77[ , 7]
summary9frost
summary(ill)
is.max = function(x) x == max(x)
is.max(frost)
state.name[is.max(ill)]
state.abb([is.max(ffrost)])
state.abb([is.max(frost)])
state.abb([is.max(frost)]
state.abb[is.max(frost)]
univariate
library(univariate)
precip
max(precip)
min(precip)
state.abb[is.max(max(precip))]
?cars
women
Formaldehyde
lm(Formaldehyde$carb~Formaldehyde$optden)
res = rstandard(lm(Formaldehyde$carb~Formaldehyde$optden))
qqnorm(res)
qqline(res)
uspop
str(uspop)
AirPassengers
?AirPassengers
str(AirPassengers)
presidents
all(is.na(presidents))
is.na(presidents)
Titanic
quakes
head(quakes)
tail(quakes)
library(xlsx)
zip_data <- read.xlsx(choose.files(), 1)
hist(zip_data)
hist(zip_data$X..Successes)
hist(zip_data$X..Successes,
main = 'Histogram for the Zip Cose Simulation',
xlab = 'Success Rate',
col = 'Turquoise',)
hist(zip_data$X..Successes,
main = 'Zip Code Simulation Histogram',
xlab = 'Success Rate',
col = 'Turquoise',)
hist(zip_data$X..Successes,
main = 'Zip Code Simulation Histogram',
xlab = 'Success Rate',
col = 'Turquoise',
las = 1)
min(zip_data$X..Successes)
mode(zip_data$X..Successes)
max(zip_data)
max(zip_data$X..Successes)
mean(zip_data$X..Successes)
sd(zip_data$X..Successes)
(mean(zip_data$X..Successes) - sd(zip_data$X..Successes))
(mean(zip_data$X..Successes) + sd(zip_data$X..Successes)) # uppr boundary
p = .32
actual = 195/425
sd(actual)
actual
''
help(sd)
sqrt((p * (1 - p)/425))
sqrt((actual * (1 - actual)/425))
501/3250
# 5
# sd of p_hat is sqrt((pq)/n)
print(paste("Loulou is : (", pi,"."))
# 5
# sd of p_hat is sqrt((pq)/n)
print(paste("Loulou is : (", pi,")", "."))
library(xlsx)
# 1a -- Create histogram for zip code simulation data
# p_hat = success/n
zip_data <- read.xlsx(choose.files(), 1)
hist(zip_data$X..Successes,
main = 'Zip Code Simulation Histogram',
xlab = 'Success Rate',
col = 'Turquoise',
las = 1)
mean(zip_data$X..Successes)
sd(zip_data$X..Successes)
(mean(zip_data$X..Successes) - sd(zip_data$X..Successes)) # lower boundary
(mean(zip_data$X..Successes) + sd(zip_data$X..Successes)) # uppr boundary
# 5
# sd of p_hat is sqrt((pq)/n)
print(paste("Loulou is : (", pi,")", "."))
# 2
ME = 0.025
conf = 1.96
n_size = 0.5 * 0.5 / ((ME / conf)**2)
n_size
# 2B
conf2 <- 2.576
n_size2 <- 0.5 * 0.5 / ((ME / conf)**2)
nsize2
n_size2
n_size2 <- 0.5 * 0.5 / ((ME / conf2)**2)
n_size2
# 2B
conf2 <- 2.576
n_size2 <- 0.5 * 0.5 / ((ME / conf2)**2)
n_size2
# 2c
ME2 <- 0.05
n_size3 <- 0.5 * 0.5 / ((ME2 / conf)**2)
n_size3
# 2c
ME2 <- 1
n_size3 <- 0.5 * 0.5 / ((ME2 / conf)**2)
n_size3
195/425
###
p = .32
n = 425
###
predict = .32
n = 425
yes = 195
p_hat = yes / n
sd_p_hat <- sqrt((predict * (1 - predict))/n)
se_p_hat <- sqrt((p_hat * (1 - p_hat))/n)
z_stat <- p_hat - predict / se_p_hat
z_stat <- (p_hat - predict) / se_p_hat
conf = 1.96
# 2c
ME2 <- 1
n_size3 <- 0.5 * 0.5 / ((ME2 / conf)**2)
n_size3
library(stats)
library(stats)
library(stats)
require(stats)
prop.test(260, 500, 0.5, 'two.sided', correct = F)
1/20
14/60
60 * .23
60 * .77
# 4b
p4_hat <- 14/60
p4_hat
se_p4_hat <- sqrt((p4_hat * (1 - p4_hat))/n)
se_p4_hat
confint(p4_hat, .05)
conf_ll <- p4_hat - 1.96 * se_p4_hat
conf_ul <- p4_hat + 1.96 * se_p4_hat
print(paste("Confidence Interval --> (", round(conf_ll, 2), ", ", sep = ""))
print(paste("Confidence Interval --> (", round(conf_ll, 2), ", " round(conf_ul, 2), sep = ""))
print(paste("Confidence Interval --> (", round(conf_ll, 2), ", ", round(conf_ul, 2), sep = ""))
print(paste("Confidence Interval --> (", round(conf_ll, 2), ", ", round(conf_ul, 2), ")", sep = ""))
se_p4_hat <- sqrt((p4_hat * (1 - p4_hat))/n)
conf_ll <- p4_hat - 1.96 * se_p4_hat
conf_ul <- p4_hat + 1.96 * se_p4_hat
print(paste("Confidence Interval --> (", round(conf_ll, 2), ", ", round(conf_ul, 2), ")", sep = ""))
### Olena session
predict = .32
n = 425
yes = 195
p_hat = yes / n
h0 <- predict
sd_p_hat <- sqrt((predict * (1 - predict))/n)
se_p_hat <- sqrt((p_hat * (1 - p_hat))/n)
z_stat <- (p_hat - predict) / se_p_hat
se_p_hat
n = 867
p_hat <- .65
confIntr <- function(p_hat, n, conf = .95)
{
se = sqrt((p_hat * (1 - p_hat))/n)
al2 = 1 - (1 - conf)/2
zstar = qnorm(al2)
ul = p_hat + zstar*se
ll = p_hat - zstar*se
return(c(ll, ul))
}
confIntr(p_hat, n)
confIntr <- function(p_hat, n, conf = .90)
{
se = sqrt((p_hat * (1 - p_hat))/n)
al2 = 1 - (1 - conf)/2
zstar = qnorm(al2)
ul = p_hat + zstar*se
ll = p_hat - zstar*se
return(c(ll, ul))
}
confIntr(p_hat, n)
n = 500
p_hat <- .65
confIntr <- function(p_hat, n, conf = .95)
{
se = sqrt((p_hat * (1 - p_hat))/n)
al2 = 1 - (1 - conf)/2
zstar = qnorm(al2)
ul = p_hat + zstar*se
ll = p_hat - zstar*se
return(c(ll, ul))
}
confIntr(p_hat, n)
# 6
n6 <- 913
p17 <- .54
p18 <- .53
all_2017 <- n6 * p17
all_2018 <- n6 * p18
z_score <- (all_2017 + all_2018) / (n * 2)
