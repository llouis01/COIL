plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
par(mar = c(5, 5, 5, 5)) # bottom, left, top, right margin
plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
par(mar = c(5, 5, 5, 5)) # bottom, left, top, right margin
plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
text(6, 10, "Plotting Region")
points(4, -10)
points(8, 16, pch = 3)
polugon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
polggon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
polygon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
txt(2, 19, "bold font", font = 2)
text(2, 19, "bold font", font = 2)
text(2, 19, "bold font", font = 2, cex = .5)
par(mar = c(5, 5, 5, 5)) # bottom, left, top, right margin
plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
text(6, 10, "Plotting Region")
points(4, -10)
points(8, 16, pch = 3)
polygon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
text(2, 19, "bold font", font = 2, cex = .5)
x = 0:4
par(mar = c(5, 5, 5, 5)) # bottom, left, top, right margin
plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
text(6, 10, "Plotting Region")
points(4, -10)
points(8, 16, pch = 3)
polygon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
text(2, 19, "bold font", font = 2, cex = .5)
x = 0:4
y = x ^ 2 - 3
lines(x, y)
x = seq(0:4, by = .1)
y = x ^ 2 - 3
lines(x, y)
x = seq(0, 4, by = .1)
y = x ^ 2 - 3
lines(x, y)
arrows(6, 6, x[33], y[33])
par(mar = c(5, 5, 5, 5)) # bottom, left, top, right margin
plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
text(6, 10, "Plotting Region")
points(4, -10)
points(8, 16, pch = 3)
polygon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
text(2, 19, "bold font", font = 2, cex = .5)
x = seq(0, 4, by = .1)
y = x ^ 2 - 3
lines(x, y)
arrows(6, 6, x[33], y[33])
par(mar = c(5, 5, 5, 5)) # bottom, left, top, right margin
plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
text(6, 10, "Plotting Region")
points(4, -10)
points(8, 16, pch = 3)
polygon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
text(2, 19, "bold font", font = 2, cex = .5)
x = seq(0, 5, by = .1)
y = x ^ 2 - 3
lines(x, y)
arrows(6, 6, x[33], y[33])
x = seq(-2, 3, by = .01)
y = x ^ 2
plot(x, y)
x = seq(-3, 3, by = .01)
y = x ^ 2
plot(x, y)
x = seq(-2, 3, by = .01)
y = x ^ 2
plot(x, y, type = "l")
plot(x, y, type = "l", lwd = 1.5)
plot(x, y, type = "l", lwd = 1.5, xlab = "", ylab = "",
xlim = c(-2, 3),
ylim = c(0, 9), axes = F)
plot(x, y, type = "l", lwd = 1.5, xlab = "", ylab = "",
xlim = c(-2, 3),
ylim = c(0, 9), axes = F)
axis(side = 1, labels = T, at = -2:3, font = 1)
plot(x, y, type = "l", lwd = 3, xlab = "", ylab = "",
xlim = c(-2, 3),
ylim = c(0, 9), axes = F)
axis(side = 1, labels = T, at = -2:3, font = 1)
axis(side = 2, labels = T, at = c(0, 4, 9), font = 1, las = 1)
help("par")
text(3.5, -0.3, 'x', font = 1, xpd = T)
text(-2.2, 9.9, 'y', font = 1, xpd = T)
text(-2.2, 10.3, 'y', font = 1, xpd = T)
plot(x, y, type = "l", lwd = 3, xlab = "", ylab = "",
xlim = c(-2, 3),
ylim = c(0, 9), axes = F)
axis(side = 1, labels = T, at = -2:3, font = 1)
axis(side = 2, labels = T, at = c(0, 4, 9), font = 1, las = 1)
text(3.5, -0.3, 'x', font = 1, xpd = T)
text(-2.2, 10.3, 'y', font = 1, xpd = T)
eda
eda = function(x) {
par(mfrow = c(2, 2))
boxplot(x)
hist(x)
plot.ecdf(x)
qqnorm(x) # is data set evenly distributed
}
eda(rivers)
eda = function(x) {
par(mfrow = c(2, 2))
boxplot(x)
hist(x)
plot.ecdf(x, verticals = T, pch = "")
qqnorm(x) # is data set evenly distributed
qqline(x, col = 'red')
}
eda(rivers)
eda(precip)
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
# 21.2
x = seq(0, 4 * pi, length.out = 100)
x = seq(0, 4 * pi, length.out = 100)
y = cos(x)
plot(y)
plot(y, type = 'l')
x = seq(0, 4 * pi, length.out = 100)
y = cos(x)
plot(y, type = 'l')
x = seq(0, 4 * pi, length.out = 10)
y = cos(x)
plot(y, type = 'l')
x = seq(0, 4 * pi, length.out = 50)
y = cos(x)
plot(y, type = 'l')
x = seq(0, 4 * pi, length.out = 100)
y = cos(x)
plot(y, type = 'l')
plot(y, type = 'l', col = 'gold')
plot(y, type = 'l', col = 'turquoise')
plot(y, type = 'l', col = 'red')
plot(y, type = 'b', col = 'red')
balance()
# 21.6
balance = function(deposit = 1000, rate = 0.05, years =30)
{
return(deposit * (1 + rate) ^ years)
}
balance()
plot(balance())
plot(balance(), labels = c(1:9))
plot(balance(), labels = c(1:9))
plot(balance(), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9))
plot(balance())
final_bal = balance(rate = 0.01, years = 20)
final_bal = c(balance(rate = 0.01, years = 20),
balance(rate = 0.02, years = 20),
balance(rate = 0.03, years = 20),
balance(rate = 0.04, years = 20),
balance(rate = 0.05, years = 20),
balance(rate = 0.06, years = 20),
balance(rate = 0.07, years = 20),
balance(rate = 0.08, years = 20),
balance(rate = 0.09, years = 20))
plot(final_bal)
plot(final_bal)
final_bal = c(balance(rate = 0.01, years = 20) * 9))
final_bal = c(balance(rate = 0.01, years = 20) * 9)
final_bal = c(balance(rate = 0.01, years = 20)^ 9)
final_bal = c(balance(rate = 0.01, years = 20) +  9)
plot(final_bal)
final_bal = c(balance(rate = 0.01, years = 20),
balance(rate = 0.02, years = 20),
balance(rate = 0.03, years = 20),
balance(rate = 0.04, years = 20),
balance(rate = 0.05, years = 20),
balance(rate = 0.06, years = 20),
balance(rate = 0.07, years = 20),
balance(rate = 0.08, years = 20),
balance(rate = 0.09, years = 20))
plot(final_bal)
final_bal = c(balance(rate = 0.01, years = 20),
balance(rate = 0.02, years = 20),
balance(rate = 0.03, years = 20),
balance(rate = 0.04, years = 20),
balance(rate = 0.05, years = 20),
balance(rate = 0.06, years = 20),
balance(rate = 0.07, years = 20),
balance(rate = 0.08, years = 20),
balance(rate = 0.09, years = 20),
col = 'red')
plot(final_bal)
final_bal = c(balance(rate = 0.01, years = 20),
balance(rate = 0.02, years = 20),
balance(rate = 0.03, years = 20),
balance(rate = 0.04, years = 20),
balance(rate = 0.05, years = 20),
balance(rate = 0.06, years = 20),
balance(rate = 0.07, years = 20),
balance(rate = 0.08, years = 20),
balance(rate = 0.09, years = 20))
plot(final_bal, col = 'red')
plot(final_bal,
col = 'blue',
ylab = 'Final Balance After 20 Years',
xlab = 'Interest rates',
type = 'b')
final_bal = c(balance(rate = 0.01, years = 20),
balance(rate = 0.02, years = 20),
balance(rate = 0.03, years = 20),
balance(rate = 0.04, years = 20),
balance(rate = 0.05, years = 20),
balance(rate = 0.06, years = 20),
balance(rate = 0.07, years = 20),
balance(rate = 0.08, years = 20),
balance(rate = 0.09, years = 20))
plot(final_bal,
col = 'blue',
ylab = 'Final Balance After 20 Years',
xlab = 'Interest rates',
type = 'b')
plot(final_bal,
col = 'blue',
ylab = 'Final Balance After 20 Years',
xlab = 'Interest rates',
type = 'b',
las = 1)
plot(final_bal,
col = 'blue',
ylab = 'Final Balance After 20 Years',
xlab = 'Interest rates',
type = 'b',
las = 1,
main = 'Plot of Final Balance After 20 Years at Different rates')
plot(final_bal,
col = 'blue',
ylab = 'Final Balance After 20 Years',
xlab = 'Interest rates',
type = 'b',
las = 1,
main = 'Final Balance After 20 Years at Different rates')
rm(list=ls())
.76 * 60
45.6 + 60
.6 * 6
1.76 * 60
2.17 * 60
qnorm(.95, 116, 32) # calculate the conf int?
s = 116
168.64 / 60
# import needed libraries
library(xlsx)
# 1a - create histogram of threepwood data
te_data <- read.xlsx("C:\\Users\\Loube\\OneDrive - William & Mary\\Bus_Stats_BUAD502A\\Assignments\\buad502a-m6-expert-dataset-net-worth.xls")
# 1a - create histogram of threepwood data
te_data <- read.xlsx("C:\\Users\\Loube\\OneDrive - William & Mary\\Bus_Stats_BUAD502A\\Assignments\\buad502a-m6-expert-dataset-net-worth.xls", 1)
View(te_data)
te_mean <- mean(te_data$Net.Worth)
te_mean <- mean(te_data$Net.Worth)
te_sd <- sd(te_data$Net.Worth)
te_n <- length(te_data$Customer..)
te_n
te_nw <- te_data$Net.Worth
te_mean <- mean(te_data$Net.Worth)
te_sd <- sd(te_data$Net.Worth)
te_n <- length(te_data$Customer..)
te_nw <- te_data$Net.Worth
te_mean <- mean(te_nw)
te_sd <- sd(te_nw)
# 1a - create histogram of threepwood data
hist(te_nw)
# 1a - create histogram of threepwood data
hist(te_nw,
main = "Histogram of Net Worth for 325 Customers",
xlab = "Net Worth",
col = 'blue',
las = 1)
# 1a - create histogram of threepwood data
hist(te_nw,
main = "Histogram of Net Worth for 325 Customers",
xlab = "Net Worth",
col = 'turquoise',
las = 1)
options(digits = 10)
# 1a - create histogram of threepwood data
hist(te_nw,
main = "Histogram of Net Worth for 325 Customers",
xlab = "Net Worth",
col = 'turquoise',
las = 1)
2e+05
summary(te_nw)
# 1a - create histogram of threepwood data
options(scipen = 10)
hist(te_nw,
main = "Histogram of Net Worth for 325 Customers",
xlab = "Net Worth",
col = 'turquoise',
las = 1)
sd
?curve
example(c"curve")
example("curve")
hist(te_nw,
main = "Histogram of Net Worth for 325 Customers",
xlab = "Net Worth",
col = 'turquoise',
las = 1)
qqplot(te_nw)
qqnorm(te_nw)
qqline(te_nw)
te_nw>800000
te_nw[te_nw>800000]
te_nw[te_nw<200000]
qqline(te_nw, col = 'red')
te_mean <- mean(te_nw)
te_mean
mean(te_data$Net.Worth)
sqrt(var(te_data$Net.Worth))
te_se <- te_sd / sqrt(te_n)
chippy
View(chippy)
te_se
te_sd/sqrt(325)
te_sd/sqrt(1000)
te_sd/sqrt(10000)
t.test(te_nw, alternative = "two.sided")
t.test(te_nw, alternative = "two.sided", mu = 425000)
options(digits = 22)
t.test(te_nw, alternative = "two.sided", mu = 425000)
2.2204460492503131e-16
1.96 * te_se
(1.96 * te_se) * .40
sqrt(325)
(1.96 * te_se)^2
(1.96 * (6646.05/5210.50))^2
1.96 * (118813.41/sqrt(7))
1.96 * (118813.41/sqrt(325))
1.96 * te_mean
# 3a - histogram of bb
bb_data <- read.xlsx("C:\\Users\\Loube\\OneDrive - William & Mary\\Bus_Stats_BUAD502A\\Assignments\\buad502a-m6-expert-dataset-basketball.xls", 1)
View(bb_data)
bb_n <- length(bb_data$Player..)
bb_3p <- bb_data$Mean.3.pointers
bb_mean <- mean(bb_3p)
bb_sd <- sd(bb_3p)
summary(bb_3p)
bb_se <- bb_sd / sqrt(bb_n)
# 2c - t-test
t.test(te_nw, alternative = "two.sided", mu = 425000)
desired_n <- (1.966 * te_sd / 5226.455)^2
tstar <- qt(0.05/2, 437-1)
goal_ME <- te_ME * .40
# 2f
te_ME <- 1.966 * te_se
goal_ME <- te_ME * .40
desired_n <- (1.966 * te_sd / goal_ME)^2
# 2c - t-test
t.test(te_nw, alternative = "two.sided", mu = 425000)
wine <- read.xlsx("C:\\Users\\Loube\\OneDrive - William & Mary\\Bus_Stats_BUAD502A\\Assignments\\buad502a-m6-expert-dataset-wine.xls", 1)
library(xlsx)
wine <- read.xlsx("C:\\Users\\Loube\\OneDrive - William & Mary\\Bus_Stats_BUAD502A\\Assignments\\buad502a-m6-expert-dataset-wine.xls", 1)
# convert to age
wine$Cellar.1 = 2020 - wine$Cellar.1
wine$Cellar.2 = 2020 - wine$Cellar.2
wine
library(xlsx)
wine <- read.xlsx("C:\\Users\\Loube\\OneDrive - William & Mary\\Bus_Stats_BUAD502A\\Assignments\\buad502a-m6-expert-dataset-wine.xls", 1)
# convert to age
wine$Cellar.1 = 2020 - wine$Cellar.1
wine$Cellar.2 = 2020 - wine$Cellar.2
wine
hist(wine$Cellar.1)
hist(wine$Cellar.2)
qqnorm(wine$Cellar.1)
qqline(wine$Cellar.1)
hist(wine$Cellar.2)
qqnorm(wine$Cellar.2)
qqline(wine$Cellar.2)
hist(wine$Cellar.1)
qqnorm(wine$Cellar.1)
qqline(wine$Cellar.1)
# check data
hist(wine$Cellar.1)
qqnorm(wine$Cellar.1)
qqline(wine$Cellar.1)
qqline(wine$Cellar.1, col = 'red')
hist(wine$Cellar.2)
qqnorm(wine$Cellar.2)
qqline(wine$Cellar.2, col = 'red')
View(wine)
# 4c - sample means ofr age
ybar_cel1 <- mean(wine$Cellar.1, na.rm = T)
ybar_cel2 <- mean(wine$Cellar.2, na.rm = T)
# 4c - sample means ofr age
ybar_c1 <- mean(wine$Cellar.1, na.rm = T)
ybar_c2 <- mean(wine$Cellar.2, na.rm = T)
ybar_cc <- ybar_c1 - ybar_c2
.44 * 12
# 4e
c1_var <- var(ybar_c1)
# 4e
c1_var <- var(ybar_c1, na.rm = T)
# 4e
c1_var <- var(21.49)
# 4e
c1_var <- var(21.49)
# 4e
c1_var <- var(wine$Cellar.1)
c2_var <- var(wine$Cellar.2, na.rm = T)
rm(ybar_cel1, ybar_cel2)
sd_cc <- sqrt(sum(c1_var, c2_var))
sd_c1 <- sqrt(c1_var)
sd_c2 <- sqrt(c2_var)
rm(sd_cc)
# 4g
se_cc <- sqrt(c1_var/length(wine$Cellar.1) + c2_var/length(na.omit(wine$Cellar.2)))
# 4h
# H0: ybar_c1 = ybar_c2
# Ha: ybar_c1 =/= ybar_c2
tstat <- ybar_cc / se_cc
var(1,2,3)
var(c(1,2,3)
)
var(wine$Cellar.1)
# 5
# H0: mu_c1 = mu_c2
c1 = wine$Cellar.1
c2 <- wine$Cellar.2
t.test(c1, c2, alternative = "two.sided")
c2
c2 <- na.omit(wine$Cellar.2)
t.test(c1, c2, alternative = "two.sided")
df_wines <- (c1_var/length(wine$Cellar.1) + c2_var/length(na.omit(wine$Cellar.2)))^2 / (c1_var/length(wine$Cellar.1))^2 / (length(wine$Cellar.1) - 1)  + c2_var/length(na.omit(wine$Cellar.2))^2 / length(na.omit(wine$Cellar.2)-1)
c1_n <- length(c1)
c2 <- wine$Cellar.2
c2_n <- length(na.omit(c2))
df_wines <- (c1_var/c1_n + c2_var/c2_n)^2 / (c1_var/c1_n)^2 / (c1_n - 1)  + (c2_var/c2_n)^2 / (c2_n-1)
# 5
# H0: mu_c1 = mu_c2
c1 = wine$Cellar.1
c1_n <- length(c1)
c2 <- wine$Cellar.2
c2_n <- length(na.omit(c2))
t.test(c1, c2, alternative = "two.sided")
df_wines <- (c1_var/c1_n + c2_var/c2_n)^2 / ((c1_var/c1_n)^2 / (c1_n - 1))  + ((c2_var/c2_n)^2 / (c2_n-1))
c1_n + c2_n - 2
min(c1_n - 1, c2_n - 2)
df_wines <- ((c1_var/c1_n + c2_var/c2_n)^2) / (((c1_var/c1_n)^2 / (c1_n - 1))  + ((c2_var/c2_n)^2 / (c2_n-1)))
p_value <- 2 * pt(tstat, c1_n + c2_n - 2, lower = F)
p_value2 <- 2* pt(tstat, min(c1_n - 1, c2_n - 2))
p_value2 <- 2* pt(tstat, min(c1_n - 1, c2_n - 2), lower = F)
se_cc <- sqrt(c1_var/c1_n + c2_var/c2_n)
# 4c - sample means ofr age
ybar_c1 <- mean(wine$Cellar.1)
ybar_c2 <- mean(wine$Cellar.2, na.rm = T)
# 4d - differences in mean wine ages from cc's
ybar_cc <- ybar_c1 - ybar_c2
# 4e
c1_var <- var(wine$Cellar.1)
c2_var <- var(wine$Cellar.2, na.rm = T)
se_cc <- sqrt(c1_var/c1_n + c2_var/c2_n)
# 4h
# H0: ybar_c1 = ybar_c2
# Ha: ybar_c1 =/= ybar_c2
tstat <- ybar_cc / se_cc
# 5
# H0: mu_c1 = mu_c2
t.test(c1, c2, alternative = "two.sided")
.44/1.77
tstar <- qt(0.05, 100-1)
tstar <- abs(qt(0.05, 100-1))
tstar <- abs(qt(0.05/2, df_wines))
ll = ybar_cc - (tstar * se_cc)
ul = ybar_cc + (tstar * se_cc)
print(paste("Confidence Interval: (",
round(ll, 2), ", ",
round(ul, 2), ")"))
t.test(c1, c2, alternative = 'two.sided', var.equal = T)
pooled_var <- ((c1_n - 1)*c1_var + (c2_n - 1)*c2_var) / ((c1_n - 1) + (c2_n - 1))
pooled_se <- sqrt(pooled_var/c1_n + pooled_var/c2_n)
df <- c1_1 + c2_n - 2
df <- c1_n + c2_n - 2
ybar_cc2 <- ybar_cc2 / pooled_se
ybar_cc2 <- ybar_cc / pooled_se
tstat2 <- ybar_cc / pooled_se
rm(ybar_cc2)
p_value3 <- 2 * pt(tsat2, df, lower = F)
p_value3 <- 2 * pt(tstat2, df, lower = F)
tstar2 <- abs(qt(0.05/2, df))
ll2 = ybar_cc - (tstar2 * pooled_se)
ul2 = ybar_cc + (tstar * pooled_se)
print(paste("Confidence Interval: (",
round(ll2, 2), ", ",
round(ul2, 2), ")"))
glo_data <- read.xlsx("C:\\Users\\Loube\\OneDrive - William & Mary\\Bus_Stats_BUAD502A\\Assignments\\buad502a-m6-expert-dataset-blooms.xls", 1)
# import data set
glo_data <- read.xlsx("C:\\Users\\Loube\\OneDrive - William & Mary\\Bus_Stats_BUAD502A\\Assignments\\buad502a-m6-expert-dataset-blooms.xls", 1)
View(glo_data)
is.na(glo_data)
hist(glo_data$With.Fertilizer, glo_data$Without.Fertilizer)
hist(glo_data$With.Fertilizer, glo_data$Without.Fertilizer, breaks = 10)
hist(glo_data$With.Fertilizer)
hist(glo_data$Without.Fertilizer)
mean_diff <- glo_data$With.Fertilizer - glo_data$Without.Fertilizer
mean_diff <- mean(glo_data$With.Fertilizer) - mean(glo_data$Without.Fertilizer)
