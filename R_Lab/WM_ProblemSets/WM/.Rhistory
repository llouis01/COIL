dbinom(15, 25, .6)
rm(list-ls())
rm(list=ls())
qqnorm(c(2, 3,4,5,6))
#### September 20th
x = sample(rep(c(1:100), 2)
#### September 20th
x = sample(rep(c(1:100), 2))
#### September 20th
x = sample(rep(c(1:100), 2))
qqnorm(x)
#### September 20th
x = c(360, 348, 12)
qqnorm(x)
356*30
20680 * 24
x <- list('gnu', c(3:7), months = month.abb)
x
x[[4]][3]
x[[3]][4]
x <- list('gnu', c(3:7), months = month.abb)
x
x[[3]][4]
x <- list('gnu', c(3:7), month.abb)
x
x <- list('gnu', c(3:7), months = month.abb)
x
x[[3]][4]
x$months[4]
x <- list('gnu', c(3:7), months = month.abb)
x
x$months[4]
creatures = c("Dogs, Cats", "Armadillo", "Human")
creatures = c("dog", "cat", "armadillo", "human")
friendly = c(TRUE, TRUE, FALSE, TRUE)
diet = c("cats", "mice", "termites", "twinkies(tm)")
waking.hours = c(13.9, 11.5, 5.9, 16.0)
creature.data = data.frame(row.names = creatures,
friendly, diet, waking.hours)
View(creature.data)
creatures[1]
creatures[1]$[1]
z = sample(c(-1:10))
z
a = data.frame(z)
a
a = data.frame(1, 2, 3, 4,
row.names = c('a', 'b', 'c', 'd'))
a = data.frame('1' = c(1:3), '2' = c(-1:1), '3' = c(3:9), '4' = c(-1, -1),
row.names = c('a', 'b', 'c', 'd'))
z = sample(c(-1:4))
y = sample(c(-2:2))
p = sample(c(2:4))
t = sample(c(-1:1))
a = data.frame(z, y, p, t)
z = c(-1:1)
y = c(-2:0)
p = c(2:4)
t = c(-1:1)
a = data.frame(z, y, p, t)
a
z = c(-1:2)
y = c(2:5)
p = c(2:5)
t = c(-1:2)
a = data.frame(z, y, p, t)
a
p = c(2:-1)
t = c(-1:2)
a = data.frame(z, y, p, t)
a
a[a<0]
gsub('NA', -1, a )
replace(a, 'NA', -1)
replace(a, 'NA')
ifelse(a<0, 'NA', a)
ifelse(a<0, 'NA')
ifelse
replace(a, a[a<0], 'NA')
a
replace(a, a<0, 'NA')
a_new = replace(a, a<0, 'NA')
a_new
a
a_new = replace(a, a<0, 'NA')
a_new
a_new
z = c(-1:2)
y = c(2:5)
p = c(2:-1)
a = data.frame(z, y, p)
a
a_new = replace(a, a<0, 'NA')
a_new
# cars mean stopping distance
cars
mean(cars[, 2])
cars[2]
# cars mean stopping distance
cars
mean(cars[, 2])
print("The average stopping distance is ", mean(cars[, 2]))
print("The average stopping distance is "+ mean(cars[, 2]))
# cars mean stopping distance
cars
mean(cars[, 2])
cars
cars[speed/2==0]
cars = cars
cars
View(cars)
cars$speed[cars$speed/2==0]
cars$speed
cars$speed/2 == 0
cars$speed%%2 == 0
cars$speed[cars$speed%%2==0]
cars[cars$speed%%2==0]
cars$speed
cars
View(cars)
cars[cars$speed%%2==0]
cars$speed[cars$speed%%2==0]
row.names(cars$speed[cars$speed%%2==0])
View(x)
row.names(cars$speed[cars$speed%%2==0])
col(cars$speed[cars$speed%%2==0])
col(cars)
cars$speed[cars$speed%%2==0]
sample.int(3)
sample(cars, 10)
sample(cars, 10, T)
sample_n(cars)
cars(which(cars$speed%%2==0))
cars[which(cars$speed%%2==0)]
subset(cars[cars$speed%%2==0])
subset(cars$speed[cars$speed%%2==0])
subset(cars, cars$speed%%2==0, select = c('speed', 'dist'))
even_speed_cars = subset(cars, cars$speed%%2==0, select = c('speed', 'dist'))
cars = cars
cars
cars$speed
cars$speed[cars$speed%%2==0]
even_speed_cars = subset(cars, cars$speed%%2==0, select = c('speed', 'dist'))
even_speed_cars
View(cars)
creature.data[order(row.names(creatures)),]
creature.data[order(row.names(creature.data)),]
ordered_creatures = creature.data[order(row.names(creature.data)) , ]
ordered_creatures
rm(list=ls())
### September 20th
val_mean <- 11.5
val_sd <- 2.1
# define uppr and lowr bound
lwr_bnd <- val_mean - val_sd
uppr_bnd <- val_mean + val_sd
# create 11,500 values
values <- seq(-8, 20, length = 11500) * val_sd + val_mean
#create a vector of values that shows the height of the probability
# distribution for each value in values
val_dis <- dnorm(values, val_mean, val_sd)
plot(values, val_dis)
plot(values, val_dis, type = "l", lwd = 2, axes = FALSE, xlab = "", ylab = "")
pnorm
# 3
(pnorm(140, 115, 25) - pnorm(115, 115, 25))
# 3
(pnorm(11.5, 11.5, 2.1) - pnorm(14.0, 11.5, 2.1))
# 3
(pnorm(14.0, 11.5, 2.1) - pnorm(11.5, 11.5, 2.1))
(pnorm(14.0, 11.5, 2.1)
- pnorm(11.5, 11.5, 2.1))
(pnorm(14.0, 11.5, 2.1)11.5 and 14.0)
(pnorm(14.0, 11.5, 2.1) - pnorm(11.5, 11.5, 2.1))
(pnorm(11.6, 11.5, 2.1) - pnorm(9.0, 11.5, 2.1))
(pnorm(11.6, 11.5, 2.1) - pnorm(9.0, 11.5, 2.1))
(pnorm(15, 11.5, 2.1) - pnorm(10, 11.5, 2.1))
((pnorm(15, 11.5, 2.1) - pnorm(10, 11.5, 2.1)) * 11500)
round(((pnorm(15, 11.5, 2.1) - pnorm(10, 11.5, 2.1)) * 11500), 1)
round(((pnorm(15, 11.5, 2.1) - pnorm(10, 11.5, 2.1)) * 11500))
1 - pnorm(10, 11.5, 2.1)
1 - pnorm(14, 11.5, 2.1)
1 - pnorm(14, 11.5, 2.1)
(pnorm(13.6, 11.5, 2.1) - pnorm(9.4, 11.5, 2.1))
# finding percentile in R
# ((pnorm(lwer_bound, mu, sd) - pnorm(uppr_bound, mu, sd)
(pnorm(13.6, 11.5, 2.1) - pnorm(9.4, 11.5, 2.1))
# histogram
data = read.csv(choose.files())
View(data)
# histogram
data = read.xlsx(choose.files())
# histogram
data = read.xlsx(choose.files())
# histogram
library(xlsx)
# histogram
library(xlsx)
data = read.xlsx(choose.files())
data = read.xlsx(choose.files(), 1)
View(data)
hist(data$BODYFAT,
breaks = 15)
data$BODYFAT
hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat")
hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat",
xlab = 'Percentage of Fat in Body')
hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat",
xlab = 'Percentage of Fat in Body',
ylab = "Occurences in Data Set")
hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat",
xlab = 'Percentage of Fat in Body',
ylab = "Occurences in Data Set",
col = 'Gold')
hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat",
xlab = 'Percentage of Fat in Body',
ylab = "Occurences in Data Set",
col = 'Gold',
border = 'black')
hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat",
xlab = 'Percentage of Fat in Body',
ylab = "Occurences in Data Set",
col = 'Gold',
border = 'black',
las = 1)
hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat",
xlab = 'Percentage of Fat in Body',
ylab = "Occurences in Data Set",
col = 'Gold',
border = 'black',
)
las = 1
hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat",
xlab = 'Percentage of Fat in Body',
ylab = "Occurences in Data Set",
col = 'Gold',
border = 'black',
las = 1)
hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat",
xlab = 'Percentage of Fat in Body',
ylab = "Occurences in Data Set",
col = 'emerald',
border = 'black',
las = 1)
hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat",
xlab = 'Percentage of Fat in Body',
ylab = "Occurences in Data Set",
col = 'Burgundy',
border = 'black',
las = 1)
hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat",
xlab = 'Percentage of Fat in Body',
ylab = "Occurences in Data Set",
col = 'Burgundy',
border = 'black',
las = 1)
hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat",
xlab = 'Percentage of Fat in Body',
ylab = "Occurences in Data Set",
col = 'Turquoise',
border = 'black',
las = 1)
bod_fat <- hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat",
xlab = 'Percentage of Fat in Body',
ylab = "Occurences in Data Set",
col = 'Turquoise',
border = 'black',
las = 1)
bod_wght <- hist(data$WEIGHT,
breaks = 15,
main = "Histogram of Body Weight",
xlab = 'Percentage of Fat in Body',
ylab = "Occurences in Data Set",
col = 'Turquoise',
border = 'black',
las = 1)
bod_wght <- hist(data$WEIGHT,
breaks = 15,
main = "Histogram of Body Weight",
xlab = 'Body Weight',
ylab = "Occurences in Data Set",
col = 'Gold',
border = 'black',
las = 1)
height <- hist(data$HEIGHT,
breaks = 15,
main = "Histogram of Height",
xlab = "Height in Inches",
ylab = "Occurences in Data Set",
las = 1)
height <- hist(data$HEIGHT,
breaks = 15,
main = "Histogram of Height",
xlab = "Height in Inches",
ylab = "Occurences in Data Set",
col = "purple",
border = 'blue'
las = 1)
height <- hist(data$HEIGHT,
breaks = 15,
main = "Histogram of Height",
xlab = "Height in Inches",
ylab = "Occurences in Data Set",
col = "purple",
border = 'blue',
las = 1)
((pnorm(560, mu, sd) - pnorm(440, mu, sd)))
# 1 Real Estate exam score
# using pnorm() with uppr and lwr bound, mean and sd,
# we can find the percentile of the scores
mu = 435
sd = 72
((pnorm(560, mu, sd) - pnorm(440, mu, sd)))
(pnorm(560, mu, sd) - pnorm(440, mu, sd))
(pnorm(620, mu, sd) - pnorm(380, mu, sd))
((pnorm(680, mu, sd) - pnorm(320, mu, sd) * 100)
((pnorm(680, mu, sd) - pnorm(320, mu, sd) * 100)
((pnorm(680, mu, sd) - pnorm(320, mu, sd) * 100))
((pnorm(680, mu, sd) - pnorm(320, mu, sd)) * 100
(pnorm(680, mu, sd) - pnorm(320, mu, sd)) * 100
rm(las)
rm(las)
(pnorm(680, mu, sd) - pnorm(320, mu, sd))
(pnorm(680, mu, sd) - pnorm(320, mu, sd)) * 100
(pnorm(590, mu, sd)- pnorm(410, mu, sd)) * 100
x <- seq(-400, 400, by = 72)
y <- pnorm(x, mean = mu, std = sd)
y <- pnorm(x, mean = mu, sd = sd)
plot(x, y)
x <- seq(-200, 400, by = 72)
y <- pnorm(x, mean = mu, sd = sd)
plot(x, y)
x <- seq(0, 700, by = 72)
y <- pnorm(x, mean = mu, sd = sd)
plot(x, y)
mu = 700
sd = 180
(pnorm(3300, mu, sd) - pnorm(280, mean, sd))
(pnorm(3300, mu, sd) - pnorm(280, mu, sd))
(pnorm(880, mu, sd) - pnorm(520, mu, sd))
1 - (pnorm(850, mu, sd)) # 2d
pnorm(880, mu, sd)
700 - 180
1 - (pnorm(520, mu, sd))
mu = 700
sd = 180
(pnorm(3300, mu, sd) - pnorm(280, mu, sd))
(pnorm(880, mu, sd) - pnorm(520, mu, sd))
pnorm(880, mu, sd) # for p(X<x) just the pnorm( uppr)
1 - (pnorm(520, mu, sd)) # 1 - lower bound for p(X>x)
pnorm(880, mu, sd) # for p(X<x) just the pnorm( uppr)
1 - (pnorm(520, mu, sd)) # 1 - lower bound for p(X>x)
(1 - (pnorm(520, mu, sd))) # 1 - lower bound for p(X>x)
pnorm(880, mu, sd) # for p(X<x) just the pnorm( uppr)
(1 - (pnorm(520, mu, sd))) # 1 - lower bound for p(X>x)
(1 - (pnorm(850, mu, sd))) # 1 - lower bound for p(X>x)
pnorm(850, mu, sd) # for p(X<x) just the pnorm( uppr)
pnorm(850, mu, sd) # for p(X<x) just the pnorm( uppr)
(1 - (pnorm(850, mu, sd))) # 1 - lower bound for p(X>x)
help(qnorm)
qnorm(.65, 435, 72)
bod_fat <- hist(data$BODYFAT,
breaks = 15,
main = "Histogram of Body Fat",
xlab = 'Percentage of Fat in Body',
ylab = "Occurences in Data Set",
col = 'Turquoise',
border = 'black',
las = 1)
bod_wght <- hist(data$WEIGHT,
breaks = 15,
main = "Histogram of Body Weight",
xlab = 'Body Weight',
ylab = "Occurences in Data Set",
col = 'Gold',
border = 'black',
las = 1)
height <- hist(data$HEIGHT,
breaks = 15,
main = "Histogram of Height",
xlab = "Height in Inches",
ylab = "Occurences in Data Set",
col = "purple",
border = 'blue',
las = 1)
qnorm(.65, 435, 72) # using qnorm up to 65%
# using pnorm() with uppr and lwr bound, mean and sd,
# we can find the percentile of the scores
mu = 435
sd = 72
(pnorm(560, mu, sd) - pnorm(440, mu, sd))
(pnorm(620, mu, sd) - pnorm(380, mu, sd))
(pnorm(680, mu, sd) - pnorm(320, mu, sd)) * 100
(pnorm(590, mu, sd)- pnorm(410, mu, sd)) * 100
435 + 72^3
qnorm(.99, 435, 72) # using qnorm with 65% as the bounding # value
qnorm(1, 435, 72) # using qnorm with 65% as the bounding # value
qnorm(.999, 435, 72) # using qnorm with 65% as the bounding # value
qnorm(.99999, 435, 72) # using qnorm with 65% as the bounding # value
qnorm(.65, 435, 72) # using qnorm with 65% as the bounding # value
# draw the curve
x = seq(0, 750, length = 1000)
y <- dnorm(x, mean = 435, sd = 72)
plot(x, y, type = 'l', lwd = 1)
plot()
plot
help("plot")
help(plot)
plot(x, y, type = 'p', lwd = 1)
plot(x, y,
type = 'p',
lwd = 1
col = 'red')
plot(x, y,
type = 'p',
lwd = 1,
col = 'red')
plot(x, y,
type = 'b',
lwd = 1,
col = 'red',
)
plot(x, y,
type = 'l',
lwd = 1,
col = 'red',
)
plot(x, y,
type = 'p',
lwd = 1,
col = 'red',
)
plot(x, y,
type = 'p',
lwd = 1,
col = 'red',
main = "Standard Normal Distribution with Mean 435 and SD 72"
)
plot(x, y,
type = 'p',
lwd = 1,
col = 'red',
main = "Standard Normal Distribution with Mean 435 and SD 72",
xlab = "Score",
ylab = "Frequency"
)
# using pnorm() with uppr and lwr bound, mean and sd,
# we can find the percentile of the scores
mu = 435
sd = 72
(pnorm(560, mu, sd) - pnorm(440, mu, sd))
(pnorm(620, mu, sd) - pnorm(380, mu, sd))
(pnorm(680, mu, sd) - pnorm(320, mu, sd)) * 100
(pnorm(590, mu, sd)- pnorm(410, mu, sd)) * 100
# draw the curve
x = seq(0, 750, length = 1000)
y <- dnorm(x, mean = 435, sd = 72)
plot(x, y,
type = 'p',
lwd = 1,
col = 'red',
main = "Standard Normal Distribution with Mean 435 and SD 72",
xlab = "Score",
ylab = "Frequency"
)
abline(v= 435, col = 'black')
abline(v= 435, col = 'black', lty = 2)
plot(x, y,
type = 'p',
lwd = 1,
col = 'red',
main = "Standard Normal Distribution with Mean 435 and SD 72",
xlab = "Score",
ylab = "Frequency"
)
abline(v= 435, col = 'black', lty = 2)
plot(x, y,
type = 'p',
lwd = 1,
col = 'red',
main = "Standard Normal Distribution with Mean 435 and SD 72",
xlab = "Score",
ylab = "Frequency"
)
abline(v = 435 + seq(-3,3)*72, col = "black",lty = 2)
text(435 + seq(-3,3)*72,max(y)/2,c(paste0(-(3:1),"sd"),"mean",paste0(1:3,"sd")))
