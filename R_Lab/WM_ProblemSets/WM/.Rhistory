ylab = 'Stopping Distance',
frame.plot = F,
las = 1)
# 20.4
datasets::islands
########## R Practice ##########
#### I/O ####
# scan()
x <- scan()
# 1: 2 3 2 3 2 3 3
# 8: 2 3 2
# 11: 3 2 3 4
# 15:
#  Read 14 items
# [1] 2 3 2 3 2 3 3 2 3 2 3 2 3 4
# Reading from outside file
y = scan("C:\\Users\\Loube\\Desktop\\temp.txt")
# can also read from website as scan(url)
# ensure file is in directory or set the path
z = matrix(scan("C:\\Users\\Loube\\Desktop\\temp.txt"), 2, 3)
# scan file in to a matrice
# inputs r output into a file of your choosing then stops with sink()
sink("file.name")
2+2
mean(c(2,3,4,5))
sink()
sink("contract.txt")
print(mean(c(3, 4, 5)))
sink()
source("C:\\Users\\Loube\\Desktop\\smallVector.txt")
# print must be included in instructions otherwise data won't show
####  Probability ####
rbinom(500, 100, .85) # 500 realizations of size 100 w/ 85% probability
# uniform(a = 0, b = 1)
set.seed(9)
runif(5)
x <- 1:1000
# sample( x, size, replace = FALSE, prob = NULL)
sample(7, 5, replace = TRUE) # repeats when replace is true
y = c('three', 'four', 'six')
sample(y, 9, replace = T, prob = 1:3/32)
####### I/O
dump('cars', 'cars_file') # put object into file
rm(cars) # delete the object from the environment
source('cars_file') # reinstate the object by sourcing the file
save.image('file77')
load('file77')
getwd()
help("write.table")
write.table(Formaldehyde, "Formaldehyde_data")
help(cumsum)
pbinom(3, 5, 1/2)
rbinom(100, 70, .5)
mean(rbinom(100, 70, .5))
mean(rbinom(100, 70, .9))
rbinom(100, 70, .9)
mean(rbinom(100, 70, .9)
mean(rbinom(100, 70, .9))
mean(rbinom(100, 70, .9))
plot(dpois(7, 10))
dpois
dpois(7, 10)
10^7
options(digits = 8)
10^7
options(digits = 10)
10^7
1 - (dpois(10, 10))
1 - (cpois(10, 10))
1 - (ppois(10, 10))
# probability of exactly 7 customers arriving at checkout
# between 430 and 445
dpois(7, 10)
# probability of more than 10; find p(X = 10) then subtract 1 from P(X = 10)
# or use
ppois(10, 10)
# probability of more than 10; find p(X = 10) then subtract 1 from P(X = 10)
# or use
1 - ppois(10, 10)
####### Graphics
pairs(trees)
contour(crimtab)
crimtab
image(quakes)
persp(crimtab)
ts.plot(AirPassengers)
plot.ecdf(quakes$depth)
fivenum(quakes$depth)
boxplot(quakes)
boxplot(quakes$depth)
qqnorm(islands)
qqline(quakes$depth)
qqline(islands)
hist(islands)
fivenum(quakes$depth)
boxplot(count ~ spray, data = InsectSprays)
View(cars)
boxplot(dist ~ speed, data = cars)
plot(quakes$long, quakes$lat)
symbols(quakes$long, quakes$lat)
symbols(quakes$long, quakes$lat, circles = 3 ^ quakes$mag)
symbols(quakes$long, quakes$lat, circles = 2.6 ^ quakes$mag)
symbols(quakes$long, quakes$lat, circles = 2 ^ quakes$mag)
symbols(quakes$long, quakes$lat, circles = 2 ^ quakes$mag)
# 3d
pairs(trees)
pairs(AirPassengers)
pairs(iris3)
stars(trees, draw.segments = T)
contour(crimtab)
image(crimtab)
persp(crimtab)
ts.plot(AirPassengers)
ts.line()
abline()
# 20.4
datasets::islands
isle = islands
isle
qqnorm(isle)
qqplot(isle)
qqnorm(islands)
qqnorm(quakes)
qqline(isle)
qqplot(isle)
# 20.4
isle = islands
isle
qqnorm(isle)
qqline(isle, col = 'red')
help("par")
pairs(cars)
image(cars$speed)
image(cars)
image(matrix(cars)
image(matrix(cars))
plot(cars)
plot(cars, type = 'l')
plot(cars, type = 'b')
plot(cars, type = 'b', col = 'red')
plot(cars, type = 'b', col = 'red', log = 'xy')
balance()
# 21.6
balance = function(deposit = 1000, rate = 0.04, years =30)
{
return(deposit * (1 + rate) ^ years)
}
balance()
# 21.6
balance = function(deposit = 1000, rate = 0.05, years =30)
{
return(deposit * (1 + rate) ^ years)
}
balance()
x <- seq(0, 4 * pi, length.out = 100)
y = cos(x)
plot(x, y, type = 'l')
par(mar = c(5, 5, 5, 5)) # bottom, left, top, right
plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
par(mar = c(5, 5, 5, 5)) # bottom, left, top, right margin
plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
par(mar = c(5, 5, 5, 5)) # bottom, left, top, right margin
plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
text(6, 10, "Plotting Region")
points(4, -10)
points(8, 16, pch = 3)
polugon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
polggon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
polygon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
txt(2, 19, "bold font", font = 2)
text(2, 19, "bold font", font = 2)
text(2, 19, "bold font", font = 2, cex = .5)
par(mar = c(5, 5, 5, 5)) # bottom, left, top, right margin
plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
text(6, 10, "Plotting Region")
points(4, -10)
points(8, 16, pch = 3)
polygon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
text(2, 19, "bold font", font = 2, cex = .5)
x = 0:4
par(mar = c(5, 5, 5, 5)) # bottom, left, top, right margin
plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
text(6, 10, "Plotting Region")
points(4, -10)
points(8, 16, pch = 3)
polygon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
text(2, 19, "bold font", font = 2, cex = .5)
x = 0:4
y = x ^ 2 - 3
lines(x, y)
x = seq(0:4, by = .1)
y = x ^ 2 - 3
lines(x, y)
x = seq(0, 4, by = .1)
y = x ^ 2 - 3
lines(x, y)
arrows(6, 6, x[33], y[33])
par(mar = c(5, 5, 5, 5)) # bottom, left, top, right margin
plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
text(6, 10, "Plotting Region")
points(4, -10)
points(8, 16, pch = 3)
polygon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
text(2, 19, "bold font", font = 2, cex = .5)
x = seq(0, 4, by = .1)
y = x ^ 2 - 3
lines(x, y)
arrows(6, 6, x[33], y[33])
par(mar = c(5, 5, 5, 5)) # bottom, left, top, right margin
plot(c(0, 9), c(-10, 20), type = 'n', ylab = "")
text(6, 10, "Plotting Region")
points(4, -10)
points(8, 16, pch = 3)
polygon(c(0, 0, 1, 1), c(0, 2, 1, 0), col = 'gold')
text(2, 19, "bold font", font = 2, cex = .5)
x = seq(0, 5, by = .1)
y = x ^ 2 - 3
lines(x, y)
arrows(6, 6, x[33], y[33])
x = seq(-2, 3, by = .01)
y = x ^ 2
plot(x, y)
x = seq(-3, 3, by = .01)
y = x ^ 2
plot(x, y)
x = seq(-2, 3, by = .01)
y = x ^ 2
plot(x, y, type = "l")
plot(x, y, type = "l", lwd = 1.5)
plot(x, y, type = "l", lwd = 1.5, xlab = "", ylab = "",
xlim = c(-2, 3),
ylim = c(0, 9), axes = F)
plot(x, y, type = "l", lwd = 1.5, xlab = "", ylab = "",
xlim = c(-2, 3),
ylim = c(0, 9), axes = F)
axis(side = 1, labels = T, at = -2:3, font = 1)
plot(x, y, type = "l", lwd = 3, xlab = "", ylab = "",
xlim = c(-2, 3),
ylim = c(0, 9), axes = F)
axis(side = 1, labels = T, at = -2:3, font = 1)
axis(side = 2, labels = T, at = c(0, 4, 9), font = 1, las = 1)
help("par")
text(3.5, -0.3, 'x', font = 1, xpd = T)
text(-2.2, 9.9, 'y', font = 1, xpd = T)
text(-2.2, 10.3, 'y', font = 1, xpd = T)
plot(x, y, type = "l", lwd = 3, xlab = "", ylab = "",
xlim = c(-2, 3),
ylim = c(0, 9), axes = F)
axis(side = 1, labels = T, at = -2:3, font = 1)
axis(side = 2, labels = T, at = c(0, 4, 9), font = 1, las = 1)
text(3.5, -0.3, 'x', font = 1, xpd = T)
text(-2.2, 10.3, 'y', font = 1, xpd = T)
eda
eda = function(x) {
par(mfrow = c(2, 2))
boxplot(x)
hist(x)
plot.ecdf(x)
qqnorm(x) # is data set evenly distributed
}
eda(rivers)
eda = function(x) {
par(mfrow = c(2, 2))
boxplot(x)
hist(x)
plot.ecdf(x, verticals = T, pch = "")
qqnorm(x) # is data set evenly distributed
qqline(x, col = 'red')
}
eda(rivers)
eda(precip)
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
eda(rnorm(200))
# 21.2
x = seq(0, 4 * pi, length.out = 100)
x = seq(0, 4 * pi, length.out = 100)
y = cos(x)
plot(y)
plot(y, type = 'l')
x = seq(0, 4 * pi, length.out = 100)
y = cos(x)
plot(y, type = 'l')
x = seq(0, 4 * pi, length.out = 10)
y = cos(x)
plot(y, type = 'l')
x = seq(0, 4 * pi, length.out = 50)
y = cos(x)
plot(y, type = 'l')
x = seq(0, 4 * pi, length.out = 100)
y = cos(x)
plot(y, type = 'l')
plot(y, type = 'l', col = 'gold')
plot(y, type = 'l', col = 'turquoise')
plot(y, type = 'l', col = 'red')
plot(y, type = 'b', col = 'red')
balance()
# 21.6
balance = function(deposit = 1000, rate = 0.05, years =30)
{
return(deposit * (1 + rate) ^ years)
}
balance()
plot(balance())
plot(balance(), labels = c(1:9))
plot(balance(), labels = c(1:9))
plot(balance(), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9))
plot(balance())
final_bal = balance(rate = 0.01, years = 20)
final_bal = c(balance(rate = 0.01, years = 20),
balance(rate = 0.02, years = 20),
balance(rate = 0.03, years = 20),
balance(rate = 0.04, years = 20),
balance(rate = 0.05, years = 20),
balance(rate = 0.06, years = 20),
balance(rate = 0.07, years = 20),
balance(rate = 0.08, years = 20),
balance(rate = 0.09, years = 20))
plot(final_bal)
plot(final_bal)
final_bal = c(balance(rate = 0.01, years = 20) * 9))
final_bal = c(balance(rate = 0.01, years = 20) * 9)
final_bal = c(balance(rate = 0.01, years = 20)^ 9)
final_bal = c(balance(rate = 0.01, years = 20) +  9)
plot(final_bal)
final_bal = c(balance(rate = 0.01, years = 20),
balance(rate = 0.02, years = 20),
balance(rate = 0.03, years = 20),
balance(rate = 0.04, years = 20),
balance(rate = 0.05, years = 20),
balance(rate = 0.06, years = 20),
balance(rate = 0.07, years = 20),
balance(rate = 0.08, years = 20),
balance(rate = 0.09, years = 20))
plot(final_bal)
final_bal = c(balance(rate = 0.01, years = 20),
balance(rate = 0.02, years = 20),
balance(rate = 0.03, years = 20),
balance(rate = 0.04, years = 20),
balance(rate = 0.05, years = 20),
balance(rate = 0.06, years = 20),
balance(rate = 0.07, years = 20),
balance(rate = 0.08, years = 20),
balance(rate = 0.09, years = 20),
col = 'red')
plot(final_bal)
final_bal = c(balance(rate = 0.01, years = 20),
balance(rate = 0.02, years = 20),
balance(rate = 0.03, years = 20),
balance(rate = 0.04, years = 20),
balance(rate = 0.05, years = 20),
balance(rate = 0.06, years = 20),
balance(rate = 0.07, years = 20),
balance(rate = 0.08, years = 20),
balance(rate = 0.09, years = 20))
plot(final_bal, col = 'red')
plot(final_bal,
col = 'blue',
ylab = 'Final Balance After 20 Years',
xlab = 'Interest rates',
type = 'b')
final_bal = c(balance(rate = 0.01, years = 20),
balance(rate = 0.02, years = 20),
balance(rate = 0.03, years = 20),
balance(rate = 0.04, years = 20),
balance(rate = 0.05, years = 20),
balance(rate = 0.06, years = 20),
balance(rate = 0.07, years = 20),
balance(rate = 0.08, years = 20),
balance(rate = 0.09, years = 20))
plot(final_bal,
col = 'blue',
ylab = 'Final Balance After 20 Years',
xlab = 'Interest rates',
type = 'b')
plot(final_bal,
col = 'blue',
ylab = 'Final Balance After 20 Years',
xlab = 'Interest rates',
type = 'b',
las = 1)
plot(final_bal,
col = 'blue',
ylab = 'Final Balance After 20 Years',
xlab = 'Interest rates',
type = 'b',
las = 1,
main = 'Plot of Final Balance After 20 Years at Different rates')
plot(final_bal,
col = 'blue',
ylab = 'Final Balance After 20 Years',
xlab = 'Interest rates',
type = 'b',
las = 1,
main = 'Final Balance After 20 Years at Different rates')
rm(list=ls())
.76 * 60
45.6 + 60
.6 * 6
1.76 * 60
2.17 * 60
qnorm(.95, 116, 32) # calculate the conf int?
s = 116
168.64 / 60
# import needed libraries
library(xlsx)
# 1a - create histogram of threepwood data
te_data <- read.xlsx("C:\\Users\\Loube\\OneDrive - William & Mary\\Bus_Stats_BUAD502A\\Assignments\\buad502a-m6-expert-dataset-net-worth.xls")
# 1a - create histogram of threepwood data
te_data <- read.xlsx("C:\\Users\\Loube\\OneDrive - William & Mary\\Bus_Stats_BUAD502A\\Assignments\\buad502a-m6-expert-dataset-net-worth.xls", 1)
View(te_data)
te_mean <- mean(te_data$Net.Worth)
te_mean <- mean(te_data$Net.Worth)
te_sd <- sd(te_data$Net.Worth)
te_n <- length(te_data$Customer..)
te_n
te_nw <- te_data$Net.Worth
te_mean <- mean(te_data$Net.Worth)
te_sd <- sd(te_data$Net.Worth)
te_n <- length(te_data$Customer..)
te_nw <- te_data$Net.Worth
te_mean <- mean(te_nw)
te_sd <- sd(te_nw)
# 1a - create histogram of threepwood data
hist(te_nw)
# 1a - create histogram of threepwood data
hist(te_nw,
main = "Histogram of Net Worth for 325 Customers",
xlab = "Net Worth",
col = 'blue',
las = 1)
# 1a - create histogram of threepwood data
hist(te_nw,
main = "Histogram of Net Worth for 325 Customers",
xlab = "Net Worth",
col = 'turquoise',
las = 1)
options(digits = 10)
# 1a - create histogram of threepwood data
hist(te_nw,
main = "Histogram of Net Worth for 325 Customers",
xlab = "Net Worth",
col = 'turquoise',
las = 1)
2e+05
summary(te_nw)
# 1a - create histogram of threepwood data
options(scipen = 10)
hist(te_nw,
main = "Histogram of Net Worth for 325 Customers",
xlab = "Net Worth",
col = 'turquoise',
las = 1)
sd
?curve
example(c"curve")
example("curve")
hist(te_nw,
main = "Histogram of Net Worth for 325 Customers",
xlab = "Net Worth",
col = 'turquoise',
las = 1)
qqplot(te_nw)
qqnorm(te_nw)
qqline(te_nw)
te_nw>800000
te_nw[te_nw>800000]
te_nw[te_nw<200000]
qqline(te_nw, col = 'red')
te_mean <- mean(te_nw)
te_mean
mean(te_data$Net.Worth)
sqrt(var(te_data$Net.Worth))
te_se <- te_sd / sqrt(te_n)
chippy
View(chippy)
te_se
te_sd/sqrt(325)
te_sd/sqrt(1000)
te_sd/sqrt(10000)
t.test(te_nw, alternative = "two.sided")
t.test(te_nw, alternative = "two.sided", mu = 425000)
options(digits = 22)
t.test(te_nw, alternative = "two.sided", mu = 425000)
2.2204460492503131e-16
1.96 * te_se
(1.96 * te_se) * .40
sqrt(325)
(1.96 * te_se)^2
(1.96 * (6646.05/5210.50))^2
1.96 * (118813.41/sqrt(7))
1.96 * (118813.41/sqrt(325))
1.96 * te_mean
# 3a - histogram of bb
bb_data <- read.xlsx("C:\\Users\\Loube\\OneDrive - William & Mary\\Bus_Stats_BUAD502A\\Assignments\\buad502a-m6-expert-dataset-basketball.xls", 1)
View(bb_data)
bb_n <- length(bb_data$Player..)
bb_3p <- bb_data$Mean.3.pointers
bb_mean <- mean(bb_3p)
bb_sd <- sd(bb_3p)
summary(bb_3p)
bb_se <- bb_sd / sqrt(bb_n)
